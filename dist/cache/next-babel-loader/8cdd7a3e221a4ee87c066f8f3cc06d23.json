{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// The route base on next-url-prettifier\n// https://github.com/BDav24/next-url-prettifier\n// Client Usage: https://github.com/BDav24/next-url-prettifier#in-your-components\nvar UrlPrettifier = require('next-url-prettifier')[\"default\"];\n\nvar NextUrlRouter = /*#__PURE__*/function (_UrlPrettifier) {\n  \"use strict\";\n\n  _inherits(NextUrlRouter, _UrlPrettifier);\n\n  var _super = _createSuper(NextUrlRouter);\n\n  function NextUrlRouter(routes) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, NextUrlRouter);\n\n    _this = _super.call(this, routes, options);\n    _this.root = options.root || '';\n    _this.linkPage = _this.linkPage.bind(_assertThisInitialized(_this));\n    _this.forEachPattern = _this.forEachPattern.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NextUrlRouter, [{\n    key: \"linkPage\",\n    value: function linkPage(pageName, params) {\n      var route = this.routes.find(function (currentRoute) {\n        return currentRoute.page === pageName;\n      });\n      var obj = {\n        as: '',\n        href: \"/\".concat(pageName).concat(this.paramsToQueryString(params))\n      };\n\n      if (route && route.prettyUrl) {\n        obj.as = this.root + (typeof route.prettyUrl === 'string' ? route.prettyUrl : route.prettyUrl(params));\n      }\n\n      return obj;\n    }\n  }, {\n    key: \"forEachPattern\",\n    value: function forEachPattern(apply) {\n      var _this2 = this;\n\n      this.routes.forEach(function (route) {\n        _this2.getPrettyUrlPatterns(route).forEach(function (prettyPattern) {\n          return apply({\n            page: route.page,\n            beforeRender: route.beforeRender,\n            pattern: _this2.root + prettyPattern.pattern,\n            defaultParams: prettyPattern.defaultParams\n          });\n        });\n      });\n    }\n  }]);\n\n  return NextUrlRouter;\n}(UrlPrettifier);\n\nvar routes = [{\n  page: 'home',\n  prettyUrl: function prettyUrl(_ref) {\n    var lang = _ref.lang;\n    return \"/\".concat(lang, \"/home\");\n  },\n  prettyUrlPatterns: [{\n    pattern: '/'\n  }, {\n    pattern: '/home'\n  }, {\n    pattern: '/:lang/home'\n  }]\n}, {\n  page: 'start',\n  prettyUrl: function prettyUrl(_ref2) {\n    var lang = _ref2.lang,\n        _ref2$step = _ref2.step,\n        step = _ref2$step === void 0 ? '' : _ref2$step;\n    return \"/\".concat(lang, \"/start/\").concat(step);\n  },\n  prettyUrlPatterns: [{\n    pattern: '/start'\n  }, {\n    pattern: '/start/:step'\n  }, {\n    pattern: '/:lang/start'\n  }, {\n    pattern: '/:lang/start/:step'\n  }]\n}, {\n  page: 'docs',\n  prettyUrl: function prettyUrl(_ref3) {\n    var lang = _ref3.lang,\n        _ref3$article = _ref3.article,\n        article = _ref3$article === void 0 ? '' : _ref3$article;\n    return \"/\".concat(lang, \"/docs/\").concat(article);\n  },\n  prettyUrlPatterns: [{\n    pattern: '/docs'\n  }, {\n    pattern: '/docs/:article'\n  }, {\n    pattern: '/:lang/docs'\n  }, {\n    pattern: '/:lang/docs/:article'\n  }]\n}];\nvar nextRouter = new NextUrlRouter(routes);\nmodule.exports = {\n  nextRouter: nextRouter,\n  routes: routes\n};","map":null,"metadata":{},"sourceType":"script"}