{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport { UseLocale } from '@ctx/UseLocale';\nimport Layout from '@components/Layout';\nimport Docs from '@components/Docs';\nimport mapCtxToProps from '@utils/mapCtxToProps';\n\nfunction DocsPage(props) {\n  _s();\n\n  var _useContext = useContext(UseLocale),\n      lang = _useContext.lang,\n      pageTitle = _useContext.locale.docs.pageTitle;\n\n  return __jsx(Layout, {\n    title: pageTitle,\n    page: props.page\n  }, __jsx(Docs, _extends({\n    lang: lang\n  }, props)));\n}\n\n_s(DocsPage, \"INc4hhg9cMK0uGf5jBKi5YfYOgA=\");\n\n_c = DocsPage;\n\nDocsPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", mapCtxToProps(ctx));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default DocsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocsPage\");","map":{"version":3,"sources":["/Users/han/Desktop/GitHub/omni-site/pages/docs.tsx"],"names":["useContext","UseLocale","Layout","Docs","mapCtxToProps","DocsPage","props","lang","pageTitle","locale","docs","page","getInitialProps","ctx"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAGA,SAASC,QAAT,CAAmBC,KAAnB,EAAyC;AAAA;;AAAA,oBAQnCN,UAAU,CAACC,SAAD,CARyB;AAAA,MAErCM,IAFqC,eAErCA,IAFqC;AAAA,MAKjCC,SALiC,eAGrCC,MAHqC,CAInCC,IAJmC,CAKjCF,SALiC;;AASvC,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEA,SADT;AAEE,IAAA,IAAI,EAAEF,KAAK,CAACK;AAFd,KAIE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ;AAAZ,KAAuBD,KAAvB,EAJF,CADF;AAQD;;GAjBQD,Q;;KAAAA,Q;;AAmBTA,QAAQ,CAACO,eAAT;AAAA,sEAA2B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CAClBT,aAAa,CAACS,GAAD,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeR,QAAf","sourcesContent":["import { useContext } from 'react';\nimport { UseLocale } from '@ctx/UseLocale';\nimport Layout from '@components/Layout';\nimport Docs from '@components/Docs';\nimport mapCtxToProps from '@utils/mapCtxToProps';\nimport type { MapCtxToProps } from '@utils/mapCtxToProps';\n\nfunction DocsPage (props: MapCtxToProps) {\n  const {\n    lang,\n    locale: {\n      docs : {\n        pageTitle\n      }\n    }\n  } = useContext(UseLocale);\n  return (\n    <Layout\n      title={pageTitle}\n      page={props.page}\n    >\n      <Docs lang={lang} { ...props }/>\n    </Layout>\n  );\n}\n\nDocsPage.getInitialProps = async (ctx: any) => {\n  return mapCtxToProps(ctx);\n};\n\nexport default DocsPage;"]},"metadata":{},"sourceType":"module"}