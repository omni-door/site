{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, `Documentation`), mdx(\"h2\", null, `Project Type`), mdx(\"h3\", null, `SPA`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Based on `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), `React`))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Based on `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/web/example/basic\"\n  }), `React-Router`), ` to implement front-end routing`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` to develop`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/\"\n  }), `webpack`), ` to package`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Comply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), `eslint`), ` standard`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Comply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stylelint.io/\"\n  }), `stylelint`), ` standard`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Apply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), `prettier`), ` to format code`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Seamless support `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/css-modules/css-modules\"\n  }), `CSS Modules`), ` and global-css without extra configuration`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h3\", null, `SSR`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Based on `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), `React`))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Based on `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/\"\n  }), `nextjs`), ` enterprise high performance node framework`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` to develop`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Support use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://koajs.com/\"\n  }), `koa`), ` to custom node server`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Search engine friendly `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zh.wikipedia.org/wiki/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E%E6%9C%80%E4%BD%B3%E5%8C%96\"\n  }), `SEO`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h3\", null, `Component(library)`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Support multiple component library demo and document framework such as `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://storybook.js.org/\"\n  }), `storybook`), `, `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docz.site/\"\n  }), `docz`), ` and `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react-styleguidist.js.org/\"\n  }), `styleguidist`))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Based on `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), `React`))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` to develop`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gulpjs.com/\"\n  }), `gulp`), ` to package`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Comply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), `eslint`), ` standard`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Comply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stylelint.io/\"\n  }), `stylelint`), ` standard`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Comply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://commitlint.js.org/\"\n  }), `commitlint`), ` standard`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Apply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), `prettier`), ` to format code`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h3\", null, `Toolkit`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` to develop`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Use `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rollupjs.org/guide/en\"\n  }), `rollup`), ` to package`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Comply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), `eslint`), ` standard`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `Apply `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), `prettier`), ` to format code`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h2\", null, `Commands`), mdx(\"p\", null, `You can input `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `omni -h`), ` in the command-line-tool to check all support commands：`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `  Commands:\n\n    init [options] [strategy]  initialize your project, [strategy] could be stable(default) or latest\n    dev [options]              omni dev [-p <port>] [-H <host>] [-P <path>]\n    start [options]            omni start [-p <port>] [-H <host>] [-P <path>]\n    new [options] [name]       omni new [name] [-f | -c] [-P <path>]\n    build [options]            build your project according to the [omni.config.js]'s build field\n    release [options]          publish your project according to the [omni.config.js]'s release field\n`)), mdx(\"h3\", null, `omni init`), mdx(\"h4\", null, `Initial your project by answer several questions`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init\n`)), mdx(\"h4\", null, `Initial your project with lastest denpendencies`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init lastest\n`)), mdx(\"h4\", null, `Initial your project without install dependencies`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init -n\n`)), mdx(\"h4\", null, `Initial your project according to some template`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init -t [projectName]\n`)), mdx(\"p\", null, `or`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init --react_entire [projectName]\n`)), mdx(\"h4\", null, `Options`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `Usage: omni init [strategy] [options]\n\ninitialize your project, [strategy] could be stable(default) or latest\n\nArguments:\n\n  strategy                 stable or latest\n\nOptions:\n  -rb, --react_basic [name]       create a basic React SPA project\n  -rs, --react_standard [name]    create a standard React SPA project\n  -re, --react_entire [name]      create a most versatile React SPA project\n  -rS, --react_ssr [name]         create a React component library\n  -rc, --react_components [name]  create a React component library\n  -t, --toolkit [name]            create a toolkit project\n  -n, --no-install                init project without install dependencies\n  -P, --path <path>               the workpath for init the project\n  -h, --help                      output usage information\n`)), mdx(\"h3\", null, `omni dev`), mdx(\"h4\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni dev\n\n  omni dev -p 8200 // Start a dev-server with port 8200\n\n  omni dev -h dev.domain.com // Start a dev-server with hostname dev.domain.com\n\n\n  omni dev -p 8200 -h dev.domain.com // Start a dev-server with port 8200 and hostname dev.domain.com\n\n`)), mdx(\"h4\", null, `Options`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `Usage: omni dev [options]\n\nomni dev [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      start the dev-server according to the specified port\n  -H, --hostname <host>  start the dev-server according to the specified hostname\n  -P, --path <path>      the workpath for start the dev-server\n  -h, --help             output usage information\n`)), mdx(\"h3\", null, `omni start`), mdx(\"p\", null, `The usage same as `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `omni dev`)), mdx(\"h4\", null, `Options`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `Usage: omni start [options]\n\nomni start [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      start the prod-server according to the specified port\n  -H, --hostname <host>  start the prod-server according to the specified hostname\n  -P, --path <path>      the workpath for start the prod-server\n  -h, --help             output usage information\n`)), mdx(\"h3\", null, `omni new`), mdx(\"h4\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni new\n\n  omni new Button // Create a component which name is Button\n\n  omni new -c // Create a component which type is class\n\n  omni new -c Button // Create a component which name is Button and type is class\n`)), mdx(\"h4\", null, `Options`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `Usage: omni new [name] [options]\n\nomni new [name] [-f | -c] [-P <path>]\n\nArguments:\n\n  name              optional! The name of component.\n\nOptions:\n  -f, --function    create a functional component\n  -c, --class       create a class component\n  -P, --path <path>  the workpath for create component\n  -h, --help        output usage information\n`)), mdx(\"h3\", null, `omni build`), mdx(\"h4\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni build\n\n  omni build -n // Build project bypass all pre-flight\n\n  omni build -c $pathTo/build.config.js // Build project according to specify config path\n`)), mdx(\"h4\", null, `Options`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `Usage: omni build [options]\n\nbuild your project according to the [omni.config.js]'s build field\n\nOptions:\n  -c, --config <path>  specify the path of config file\n  -n, --no-verify      bypass all pre-check before building\n  -P, --path <path>    the workpath for build project\n  -h, --help           output usage information\n`)), mdx(\"h3\", null, `omni release`), mdx(\"h4\", null, `Usage`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni release\n\n  omni release -n // Release project bypass all pre-flight\n\n  omni release -a // Release project that automatic iteration version\n\n  omni release -i // Release project that ignore automatic iteration version\n\n  omni release -m // Release project that manual iteration version\n\n  omni release -t // Release project that the tag will add to npm-package\n`)), mdx(\"h4\", null, `Options`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `Usage: omni release [options]\n\npublish your project according to the [omni.config.js]'s release field\n\nOptions:\n  -a, --automatic         automatic iteration version\n  -i, --ignore            ignore automatic iteration version\n  -m, --manual <version>  manual iteration version\n  -t, --tag <tag>         the tag will add to npm-package\n  -n, --no-verify         bypass unit-test eslint and stylelint check\n  -P, --path <path>       the workpath for release project\n  -h, --help              output usage information\n`)), mdx(\"h1\", null, `About「omni.config.js」config file`), mdx(\"h3\", null, `type`), mdx(\"p\", null, `OMNI will process of initialization, construction and template creation according to different project types`), mdx(\"p\", null, `The project types:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `spa-react - React single-page-application`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `ssr-react - React server-side-render application`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `component-react - React Component Library`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `toolkit - SDK Library `))), mdx(\"h3\", null, `dev`), mdx(\"p\", null, `The dev-server based on express, realizing hot-update, api-proxy and other common functions. Provide personalized customization schemes such as middleware customization, port number, log output level and webpack configuration.`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `middleware - middleware configuration:`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `{\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `  or`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  proxyConfig?: (ProxyItem | ProxyFn)[];\n}) => {\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `webpack - dev-server webpack configuration`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `proxy - dev-server proxy configuration`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `{\n  route: '/api', // Address of the local service for the proxy API\n  config: {\n    target: 'http://www.api.com/api', // The actual address of the proxy API\n    changeOrigin: true // whether change the host\n  }\n}\n`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `  or`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  middlewareConfig?: (MiddlewareItem | MiddlewareFn)[];\n}) => {\n  route: string;\n  config: Config;\n}\n`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `  For more configuration, see `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chimurai/http-proxy-middleware\"\n  }), `http-proxy-middleware`))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `port - dev-server port`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `host - dev-server host`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `https - start dev-server with https protocol which could custom `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `key`), ` and `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `cert`))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `serverType - dev-server type`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `logLevel - The log-level which dev-server will apply, optional 'debug', 'info', 'warn', 'error', 'silent'`))), mdx(\"h3\", null, `build`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `autoRelease - auto release project after build success`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `srcDir - the build source directory`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `outDir - the directory for compiled project`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `esmDir - es6 module compiled directory`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `hash - whether the hash tag add to building result, optional 'contenthash', 'chunkhash' and 'hash'(true equal 'contenthash')`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `configuration - The callback will be call in the build-process, you can return your custom build configuration`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `reserve - Configure resources that are not packaged but need to be kept in the build result`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `style - whether or not reserve the stylesheet files`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `assets - reserve other asset paths`)))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `preflight - the flight check before build`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `typescript - whether or not process the ts or tsx files`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `test - whether or not process unit-test`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `eslint - whether or not process eslint check`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `prettier - whether or not process prettier check`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `stylelint - whether or not process stylelint check`))))), mdx(\"h3\", null, `release`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `git - project git repo url`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `npm - npm depository url`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `preflight - the flight check before release`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `test - whether or not process unit-test`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `eslint - whether or not process eslint check`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `prettier - whether or not process prettier check`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `stylelint - whether or not process stylelint check`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `commitlint - whether or not process commitlint check`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `branch - only can release in this branch, set empty string to ignore this check`))))), mdx(\"h3\", null, `template`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `root - the root directory for generate template`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `typescript - whether or not apply typescript`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `test - whether or not generate unit-test file`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `stylesheet - stylesheet type`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `readme - `, `[true, 'mdx']`, ` (`, `[whether or not README.md, generate mdx or md file]`, `)`))), mdx(\"h3\", null, `plugins`), mdx(\"p\", null, `plugin must meet following types:`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `type OmniPlugin = {\n  name: string;\n  stage: PluginStage;\n  handler: PluginHandler;\n};\n\ntype PluginStage = 'new' | 'build' | 'release';\ninterface PluginHandler {\n  (config: Omit<OmniConfig, 'plugins'>): Promise<any>;\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/han/Desktop/GitHub/omni-site/src/components/Docs/docs-en.md"],"names":["React","mdx","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Documentation`}</h1>\n    <h2>{`Project Type`}</h2>\n    <h3>{`SPA`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Based on `}<a parentName=\"p\" {...{\n            \"href\": \"https://reactjs.org/\"\n          }}>{`React`}</a></p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Based on `}<a parentName=\"p\" {...{\n            \"href\": \"https://reacttraining.com/react-router/web/example/basic\"\n          }}>{`React-Router`}</a>{` to implement front-end routing`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` to develop`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://webpack.js.org/\"\n          }}>{`webpack`}</a>{` to package`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Comply `}<a parentName=\"p\" {...{\n            \"href\": \"https://eslint.org/\"\n          }}>{`eslint`}</a>{` standard`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Comply `}<a parentName=\"p\" {...{\n            \"href\": \"https://stylelint.io/\"\n          }}>{`stylelint`}</a>{` standard`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Apply `}<a parentName=\"p\" {...{\n            \"href\": \"https://prettier.io/docs/en/install.html\"\n          }}>{`prettier`}</a>{` to format code`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Seamless support `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/css-modules/css-modules\"\n          }}>{`CSS Modules`}</a>{` and global-css without extra configuration`}</p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h3>{`SSR`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Based on `}<a parentName=\"p\" {...{\n            \"href\": \"https://reactjs.org/\"\n          }}>{`React`}</a></p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Based on `}<a parentName=\"p\" {...{\n            \"href\": \"https://nextjs.org/\"\n          }}>{`nextjs`}</a>{` enterprise high performance node framework`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` to develop`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Support use `}<a parentName=\"p\" {...{\n            \"href\": \"https://koajs.com/\"\n          }}>{`koa`}</a>{` to custom node server`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Search engine friendly `}<a parentName=\"p\" {...{\n            \"href\": \"https://zh.wikipedia.org/wiki/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E%E6%9C%80%E4%BD%B3%E5%8C%96\"\n          }}>{`SEO`}</a></p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h3>{`Component(library)`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Support multiple component library demo and document framework such as `}<a parentName=\"p\" {...{\n            \"href\": \"https://storybook.js.org/\"\n          }}>{`storybook`}</a>{`, `}<a parentName=\"p\" {...{\n            \"href\": \"https://docz.site/\"\n          }}>{`docz`}</a>{` and `}<a parentName=\"p\" {...{\n            \"href\": \"https://react-styleguidist.js.org/\"\n          }}>{`styleguidist`}</a></p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Based on `}<a parentName=\"p\" {...{\n            \"href\": \"https://reactjs.org/\"\n          }}>{`React`}</a></p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` to develop`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://gulpjs.com/\"\n          }}>{`gulp`}</a>{` to package`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Comply `}<a parentName=\"p\" {...{\n            \"href\": \"https://eslint.org/\"\n          }}>{`eslint`}</a>{` standard`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Comply `}<a parentName=\"p\" {...{\n            \"href\": \"https://stylelint.io/\"\n          }}>{`stylelint`}</a>{` standard`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Comply `}<a parentName=\"p\" {...{\n            \"href\": \"https://commitlint.js.org/\"\n          }}>{`commitlint`}</a>{` standard`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Apply `}<a parentName=\"p\" {...{\n            \"href\": \"https://prettier.io/docs/en/install.html\"\n          }}>{`prettier`}</a>{` to format code`}</p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h3>{`Toolkit`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` to develop`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://rollupjs.org/guide/en\"\n          }}>{`rollup`}</a>{` to package`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Comply `}<a parentName=\"p\" {...{\n            \"href\": \"https://eslint.org/\"\n          }}>{`eslint`}</a>{` standard`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`Apply `}<a parentName=\"p\" {...{\n            \"href\": \"https://prettier.io/docs/en/install.html\"\n          }}>{`prettier`}</a>{` to format code`}</p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h2>{`Commands`}</h2>\n    <p>{`You can input `}<inlineCode parentName=\"p\">{`omni -h`}</inlineCode>{` in the command-line-tool to check all support commands：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`  Commands:\n\n    init [options] [strategy]  initialize your project, [strategy] could be stable(default) or latest\n    dev [options]              omni dev [-p <port>] [-H <host>] [-P <path>]\n    start [options]            omni start [-p <port>] [-H <host>] [-P <path>]\n    new [options] [name]       omni new [name] [-f | -c] [-P <path>]\n    build [options]            build your project according to the [omni.config.js]'s build field\n    release [options]          publish your project according to the [omni.config.js]'s release field\n`}</code></pre>\n    <h3>{`omni init`}</h3>\n    <h4>{`Initial your project by answer several questions`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init\n`}</code></pre>\n    <h4>{`Initial your project with lastest denpendencies`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init lastest\n`}</code></pre>\n    <h4>{`Initial your project without install dependencies`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init -n\n`}</code></pre>\n    <h4>{`Initial your project according to some template`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init -t [projectName]\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init --react_entire [projectName]\n`}</code></pre>\n    <h4>{`Options`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage: omni init [strategy] [options]\n\ninitialize your project, [strategy] could be stable(default) or latest\n\nArguments:\n\n  strategy                 stable or latest\n\nOptions:\n  -rb, --react_basic [name]       create a basic React SPA project\n  -rs, --react_standard [name]    create a standard React SPA project\n  -re, --react_entire [name]      create a most versatile React SPA project\n  -rS, --react_ssr [name]         create a React component library\n  -rc, --react_components [name]  create a React component library\n  -t, --toolkit [name]            create a toolkit project\n  -n, --no-install                init project without install dependencies\n  -P, --path <path>               the workpath for init the project\n  -h, --help                      output usage information\n`}</code></pre>\n    <h3>{`omni dev`}</h3>\n    <h4>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni dev\n\n  omni dev -p 8200 // Start a dev-server with port 8200\n\n  omni dev -h dev.domain.com // Start a dev-server with hostname dev.domain.com\n\n\n  omni dev -p 8200 -h dev.domain.com // Start a dev-server with port 8200 and hostname dev.domain.com\n\n`}</code></pre>\n    <h4>{`Options`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage: omni dev [options]\n\nomni dev [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      start the dev-server according to the specified port\n  -H, --hostname <host>  start the dev-server according to the specified hostname\n  -P, --path <path>      the workpath for start the dev-server\n  -h, --help             output usage information\n`}</code></pre>\n    <h3>{`omni start`}</h3>\n    <p>{`The usage same as `}<inlineCode parentName=\"p\">{`omni dev`}</inlineCode></p>\n    <h4>{`Options`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage: omni start [options]\n\nomni start [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      start the prod-server according to the specified port\n  -H, --hostname <host>  start the prod-server according to the specified hostname\n  -P, --path <path>      the workpath for start the prod-server\n  -h, --help             output usage information\n`}</code></pre>\n    <h3>{`omni new`}</h3>\n    <h4>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni new\n\n  omni new Button // Create a component which name is Button\n\n  omni new -c // Create a component which type is class\n\n  omni new -c Button // Create a component which name is Button and type is class\n`}</code></pre>\n    <h4>{`Options`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage: omni new [name] [options]\n\nomni new [name] [-f | -c] [-P <path>]\n\nArguments:\n\n  name              optional! The name of component.\n\nOptions:\n  -f, --function    create a functional component\n  -c, --class       create a class component\n  -P, --path <path>  the workpath for create component\n  -h, --help        output usage information\n`}</code></pre>\n    <h3>{`omni build`}</h3>\n    <h4>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni build\n\n  omni build -n // Build project bypass all pre-flight\n\n  omni build -c $pathTo/build.config.js // Build project according to specify config path\n`}</code></pre>\n    <h4>{`Options`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage: omni build [options]\n\nbuild your project according to the [omni.config.js]'s build field\n\nOptions:\n  -c, --config <path>  specify the path of config file\n  -n, --no-verify      bypass all pre-check before building\n  -P, --path <path>    the workpath for build project\n  -h, --help           output usage information\n`}</code></pre>\n    <h3>{`omni release`}</h3>\n    <h4>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni release\n\n  omni release -n // Release project bypass all pre-flight\n\n  omni release -a // Release project that automatic iteration version\n\n  omni release -i // Release project that ignore automatic iteration version\n\n  omni release -m // Release project that manual iteration version\n\n  omni release -t // Release project that the tag will add to npm-package\n`}</code></pre>\n    <h4>{`Options`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`Usage: omni release [options]\n\npublish your project according to the [omni.config.js]'s release field\n\nOptions:\n  -a, --automatic         automatic iteration version\n  -i, --ignore            ignore automatic iteration version\n  -m, --manual <version>  manual iteration version\n  -t, --tag <tag>         the tag will add to npm-package\n  -n, --no-verify         bypass unit-test eslint and stylelint check\n  -P, --path <path>       the workpath for release project\n  -h, --help              output usage information\n`}</code></pre>\n    <h1>{`About「omni.config.js」config file`}</h1>\n    <h3>{`type`}</h3>\n    <p>{`OMNI will process of initialization, construction and template creation according to different project types`}</p>\n    <p>{`The project types:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`spa-react - React single-page-application`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`ssr-react - React server-side-render application`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`component-react - React Component Library`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`toolkit - SDK Library `}</p>\n      </li>\n    </ul>\n    <h3>{`dev`}</h3>\n    <p>{`The dev-server based on express, realizing hot-update, api-proxy and other common functions. Provide personalized customization schemes such as middleware customization, port number, log output level and webpack configuration.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`middleware - middleware configuration:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`{\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  or`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  proxyConfig?: (ProxyItem | ProxyFn)[];\n}) => {\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`webpack - dev-server webpack configuration`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`proxy - dev-server proxy configuration`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`{\n  route: '/api', // Address of the local service for the proxy API\n  config: {\n    target: 'http://www.api.com/api', // The actual address of the proxy API\n    changeOrigin: true // whether change the host\n  }\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  or`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  middlewareConfig?: (MiddlewareItem | MiddlewareFn)[];\n}) => {\n  route: string;\n  config: Config;\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  For more configuration, see `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/chimurai/http-proxy-middleware\"\n          }}>{`http-proxy-middleware`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`port - dev-server port`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`host - dev-server host`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`https - start dev-server with https protocol which could custom `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`cert`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`serverType - dev-server type`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`logLevel - The log-level which dev-server will apply, optional 'debug', 'info', 'warn', 'error', 'silent'`}</p>\n      </li>\n    </ul>\n    <h3>{`build`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`autoRelease - auto release project after build success`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`srcDir - the build source directory`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`outDir - the directory for compiled project`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`esmDir - es6 module compiled directory`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`hash - whether the hash tag add to building result, optional 'contenthash', 'chunkhash' and 'hash'(true equal 'contenthash')`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`configuration - The callback will be call in the build-process, you can return your custom build configuration`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`reserve - Configure resources that are not packaged but need to be kept in the build result`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`style - whether or not reserve the stylesheet files`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`assets - reserve other asset paths`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`preflight - the flight check before build`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`typescript - whether or not process the ts or tsx files`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`test - whether or not process unit-test`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`eslint - whether or not process eslint check`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`prettier - whether or not process prettier check`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`stylelint - whether or not process stylelint check`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`release`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`git - project git repo url`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`npm - npm depository url`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`preflight - the flight check before release`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`test - whether or not process unit-test`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`eslint - whether or not process eslint check`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`prettier - whether or not process prettier check`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`stylelint - whether or not process stylelint check`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`commitlint - whether or not process commitlint check`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`branch - only can release in this branch, set empty string to ignore this check`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`template`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`root - the root directory for generate template`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`typescript - whether or not apply typescript`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`test - whether or not generate unit-test file`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`stylesheet - stylesheet type`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`readme - `}{`[true, 'mdx']`}{` (`}{`[whether or not README.md, generate mdx or md file]`}{`)`}</p>\n      </li>\n    </ul>\n    <h3>{`plugins`}</h3>\n    <p>{`plugin must meet following types:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type OmniPlugin = {\n  name: string;\n  stage: PluginStage;\n  handler: PluginHandler;\n};\n\ntype PluginStage = 'new' | 'build' | 'release';\ninterface PluginHandler {\n  (config: Omit<OmniConfig, 'plugins'>): Promise<any>;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}