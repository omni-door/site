{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Documentation\"), mdx(\"h2\", null, \"Project Type\"), mdx(\"h3\", null, \"SPA\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), \"React\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/web/example/basic\"\n  }), \"React-Router\"), \" to implement front-end routing\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), \"typescript\"), \" to develop\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/\"\n  }), \"webpack\"), \" to package\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Comply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), \"eslint\"), \" standard\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Comply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stylelint.io/\"\n  }), \"stylelint\"), \" standard\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Apply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), \"prettier\"), \" to format code\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Seamless support \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/css-modules/css-modules\"\n  }), \"CSS Modules\"), \" and global-css without extra configuration\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u2026\\u2026\"))), mdx(\"h3\", null, \"SSR\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), \"React\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/\"\n  }), \"nextjs\"), \" enterprise high performance node framework\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), \"typescript\"), \" to develop\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Support use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://koajs.com/\"\n  }), \"koa\"), \" to custom node server\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Search engine friendly \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zh.wikipedia.org/wiki/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E%E6%9C%80%E4%BD%B3%E5%8C%96\"\n  }), \"SEO\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u2026\\u2026\"))), mdx(\"h3\", null, \"Component(library)\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Support multiple component library demo and document framework such as \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://storybook.js.org/\"\n  }), \"storybook\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docz.site/\"\n  }), \"docz\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react-styleguidist.js.org/\"\n  }), \"styleguidist\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), \"React\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jestjs.io/\"\n  }), \"Jest\"), \" to cover components unit-test\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gulpjs.com/\"\n  }), \"gulp\"), \" to package\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), \"typescript\"), \" to develop\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Comply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), \"eslint\"), \" standard\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Comply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stylelint.io/\"\n  }), \"stylelint\"), \" standard\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Apply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), \"prettier\"), \" to format code\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u2026\\u2026\"))), mdx(\"h3\", null, \"Toolkit\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://d.umijs.org/\"\n  }), \"dumi\"), \" which is demo and document framework for the project\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"\\u4F7F\\u7528 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mochajs.org/\"\n  }), \"mocha\"), \" \\u8FDB\\u884CNode\\u7AEF\\u7684\\u5355\\u9875\\u6D4B\\u8BD5\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"\\u4F7F\\u7528 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://karma-runner.github.io/latest/index.html\"\n  }), \"karma\"), \" \\u8FDB\\u884C\\u6D4F\\u89C8\\u5668\\u7AEF\\u7684\\u5355\\u9875\\u6D4B\\u8BD5\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rollupjs.org/guide/en\"\n  }), \"rollup\"), \" to package\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), \"typescript\"), \" to develop\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Comply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), \"eslint\"), \" standard\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Apply \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), \"prettier\"), \" to format code\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u2026\\u2026\"))), mdx(\"h2\", null, \"Commands\"), mdx(\"p\", null, \"You can input \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"omni -h\"), \" in the command-line-tool to check all support commands\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"  Commands:\\n\\n    init [options] [strategy]  initialize your project, [strategy] could be stable(default) or latest\\n    dev [options]              omni dev [-p <port>] [-H <host>] [-P <path>]\\n    start [options]            omni start [-p <port>] [-H <host>] [-P <path>]\\n    new [options] [name]       omni new [name] [-f | -c] [-P <path>]\\n    build [options]            build your project according to the [omni.config.js]'s build field\\n    release [options]          publish your project according to the [omni.config.js]'s release field\\n\")), mdx(\"h3\", null, \"omni init\"), mdx(\"h4\", null, \"Initial your project by answer several questions\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"omni init\\n\")), mdx(\"h4\", null, \"Initial your project with lastest denpendencies\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"omni init lastest\\n\")), mdx(\"h4\", null, \"Initial your project without install dependencies\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"omni init -n\\n\")), mdx(\"h4\", null, \"Initial your project according to some template\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"omni init -t [projectName]\\n\")), mdx(\"p\", null, \"or\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"omni init --react_entire [projectName]\\n\")), mdx(\"h4\", null, \"Options\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"Usage: omni init [strategy] [options]\\n\\ninitialize your project, [strategy] could be stable(default) or latest\\n\\nArguments:\\n\\n  strategy                 stable or latest\\n\\nOptions:\\n  -rb, --react_basic [name]       create a basic React SPA project\\n  -rs, --react_standard [name]    create a standard React SPA project\\n  -re, --react_entire [name]      create a most versatile React SPA project\\n  -rS, --react_ssr [name]         create a React component library\\n  -rc, --react_components [name]  create a React component library\\n  -t, --toolkit [name]            create a toolkit project\\n  -n, --no-install                init project without install dependencies\\n  -P, --path <path>               the workpath for init the project\\n  -h, --help                      output usage information\\n\")), mdx(\"h3\", null, \"omni dev\"), mdx(\"h4\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"  omni dev\\n\\n  omni dev -p 8200 // Start a dev-server with port 8200\\n\\n  omni dev -h dev.domain.com // Start a dev-server with hostname dev.domain.com\\n\\n\\n  omni dev -p 8200 -h dev.domain.com // Start a dev-server with port 8200 and hostname dev.domain.com\\n\\n\")), mdx(\"h4\", null, \"Options\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"Usage: omni dev [options]\\n\\nomni dev [-p <port>] [-H <host>] [-P <path>]\\n\\nOptions:\\n  -p, --port <port>      start the dev-server according to the specified port\\n  -H, --hostname <host>  start the dev-server according to the specified hostname\\n  -P, --path <path>      the workpath for start the dev-server\\n  -h, --help             output usage information\\n\")), mdx(\"h3\", null, \"omni start\"), mdx(\"p\", null, \"The usage same as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"omni dev\")), mdx(\"h4\", null, \"Options\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"Usage: omni start [options]\\n\\nomni start [-p <port>] [-H <host>] [-P <path>]\\n\\nOptions:\\n  -p, --port <port>      start the prod-server according to the specified port\\n  -H, --hostname <host>  start the prod-server according to the specified hostname\\n  -P, --path <path>      the workpath for start the prod-server\\n  -h, --help             output usage information\\n\")), mdx(\"h3\", null, \"omni new\"), mdx(\"h4\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"  omni new\\n\\n  omni new Button // Create a component which name is Button\\n\\n  omni new -c // Create a component which type is class\\n\\n  omni new -c Button // Create a component which name is Button and type is class\\n\")), mdx(\"h4\", null, \"Options\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"Usage: omni new [name] [options]\\n\\nomni new [name] [-f | -c] [-P <path>]\\n\\nArguments:\\n\\n  name              optional! The name of component.\\n\\nOptions:\\n  -f, --function    create a functional component\\n  -c, --class       create a class component\\n  -P, --path <path>  the workpath for create component\\n  -h, --help        output usage information\\n\")), mdx(\"h3\", null, \"omni build\"), mdx(\"h4\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"  omni build\\n\\n  omni build -n // Build project bypass all pre-flight\\n\\n  omni build -c $pathTo/build.config.js // Build project according to specify config path\\n\")), mdx(\"h4\", null, \"Options\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"Usage: omni build [options]\\n\\nbuild your project according to the [omni.config.js]'s build field\\n\\nOptions:\\n  -c, --config <path>  specify the path of config file\\n  -n, --no-verify      bypass all pre-check before building\\n  -P, --path <path>    the workpath for build project\\n  -h, --help           output usage information\\n\")), mdx(\"h3\", null, \"omni release\"), mdx(\"h4\", null, \"Usage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"  omni release\\n\\n  omni release -n // Release project bypass all pre-flight\\n\\n  omni release -a // Release project that automatic iteration version\\n\\n  omni release -i // Release project that ignore automatic iteration version\\n\\n  omni release -m // Release project that manual iteration version\\n\\n  omni release -t // Release project that the tag will add to npm-package\\n\")), mdx(\"h4\", null, \"Options\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"Usage: omni release [options]\\n\\npublish your project according to the [omni.config.js]'s release field\\n\\nOptions:\\n  -a, --automatic         automatic iteration version\\n  -i, --ignore            ignore automatic iteration version\\n  -m, --manual <version>  manual iteration version\\n  -t, --tag <tag>         the tag will add to npm-package\\n  -n, --no-verify         bypass unit-test eslint and stylelint check\\n  -P, --path <path>       the workpath for release project\\n  -h, --help              output usage information\\n\")), mdx(\"h1\", null, \"About\\u300Comni.config.js\\u300Dconfig file\"), mdx(\"h3\", null, \"type\"), mdx(\"p\", null, \"OMNI will process of initialization, construction and template creation according to different project types\"), mdx(\"p\", null, \"The project types:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"spa-react - React single-page-application\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ssr-react - React server-side-render application\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"component-react - React Component Library\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"toolkit - SDK Library \"))), mdx(\"h3\", null, \"dev\"), mdx(\"p\", null, \"The dev-server based on express, realizing hot-update, api-proxy and other common functions. Provide personalized customization schemes such as middleware customization, port number, log output level and webpack configuration.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"middleware - middleware configuration:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"{\\n  route: string;\\n  callback: (req: any, res: any) => Promise<void>;\\n}\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  or\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"(params: {\\n  ip: string;\\n  port: number;\\n  host?: string;\\n  logLevel: LOGLEVEL;\\n  proxyConfig?: (ProxyItem | ProxyFn)[];\\n}) => {\\n  route: string;\\n  callback: (req: any, res: any) => Promise<void>;\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"webpack - dev-server webpack configuration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"proxy - dev-server proxy configuration\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"{\\n  route: '/api', // Address of the local service for the proxy API\\n  config: {\\n    target: 'http://www.api.com/api', // The actual address of the proxy API\\n    changeOrigin: true // whether change the host\\n  }\\n}\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  or\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"(params: {\\n  ip: string;\\n  port: number;\\n  host?: string;\\n  logLevel: LOGLEVEL;\\n  middlewareConfig?: (MiddlewareItem | MiddlewareFn)[];\\n}) => {\\n  route: string;\\n  config: Config;\\n}\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  For more configuration, see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chimurai/http-proxy-middleware\"\n  }), \"http-proxy-middleware\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"port - dev-server port\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"host - dev-server host\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"https - start dev-server with https protocol which could custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"key\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cert\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"serverType - dev-server type\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"logLevel - The log-level which dev-server will apply, optional 'debug', 'info', 'warn', 'error', 'silent'\"))), mdx(\"h3\", null, \"build\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"autoRelease - auto release project after build success\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"srcDir - the build source directory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"outDir - the directory for compiled project\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"esmDir - es6 module compiled directory\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"hash - whether the hash tag add to building result, optional 'contenthash', 'chunkhash' and 'hash'(true equal 'contenthash')\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"configuration - The callback will be call in the build-process, you can return your custom build configuration\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"reserve - Configure resources that are not packaged but need to be kept in the build result\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"style - whether or not reserve the stylesheet files\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"assets - reserve other asset paths\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"preflight - the flight check before build\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"typescript - whether or not process the ts or tsx files\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"test - whether or not process unit-test\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"eslint - whether or not process eslint check\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"prettier - whether or not process prettier check\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"stylelint - whether or not process stylelint check\"))))), mdx(\"h3\", null, \"release\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"autoBuild - auto build project before release process\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"autoTag - npm publish will auto set tag according to the current version\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"git - project git repo url\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"npm - npm depository url\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"preflight - the flight check before release\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"test - whether or not process unit-test\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"eslint - whether or not process eslint check\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"prettier - whether or not process prettier check\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"stylelint - whether or not process stylelint check\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"commitlint - whether or not process commitlint check\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"branch - only can release in this branch, set empty string to ignore this check\"))))), mdx(\"h3\", null, \"template\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"root - the root directory for generate template\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"typescript - whether or not apply typescript\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"test - whether or not generate unit-test file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"stylesheet - stylesheet type\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"readme - \", \"[true, 'mdx']\", \" (\", \"[whether or not README.md, generate mdx or md file]\", \")\"))), mdx(\"h3\", null, \"plugins\"), mdx(\"p\", null, \"plugin must meet following types:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"type OmniPlugin = {\\n  name: string;\\n  stage: PluginStage;\\n  handler: PluginHandler;\\n};\\n\\ntype PluginStage = 'new' | 'build' | 'release';\\ninterface PluginHandler {\\n  (config: Omit<OmniConfig, 'plugins'>): Promise<any>;\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}