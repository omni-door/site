{"ast":null,"code":"// The route base on next-url-prettifier\n// https://github.com/BDav24/next-url-prettifier\n// Client Usage: https://github.com/BDav24/next-url-prettifier#in-your-components\nconst UrlPrettifier = require('next-url-prettifier').default;\n\nclass NextUrlRouter extends UrlPrettifier {\n  constructor(routes, options = {}) {\n    super(routes, options);\n    this.root = options.root || '';\n    this.linkPage = this.linkPage.bind(this);\n    this.forEachPattern = this.forEachPattern.bind(this);\n  }\n\n  linkPage(pageName, params) {\n    const route = this.routes.find(currentRoute => currentRoute.page === pageName);\n    const obj = {\n      as: '',\n      href: `/${pageName}${this.paramsToQueryString(params)}`\n    };\n\n    if (route && route.prettyUrl) {\n      obj.as = this.root + (typeof route.prettyUrl === 'string' ? route.prettyUrl : route.prettyUrl(params));\n    }\n\n    return obj;\n  }\n\n  forEachPattern(apply) {\n    this.routes.forEach(route => {\n      this.getPrettyUrlPatterns(route).forEach(prettyPattern => apply({\n        page: route.page,\n        beforeRender: route.beforeRender,\n        pattern: this.root + prettyPattern.pattern,\n        defaultParams: prettyPattern.defaultParams\n      }));\n    });\n  }\n\n}\n\nconst routes = [{\n  page: 'home',\n  prettyUrl: ({\n    lang\n  }) => `/${lang}/home`,\n  prettyUrlPatterns: [{\n    pattern: '/'\n  }, {\n    pattern: '/home'\n  }, {\n    pattern: '/:lang/home'\n  }]\n}, {\n  page: 'start',\n  prettyUrl: ({\n    lang,\n    step = ''\n  }) => `/${lang}/start/${step}`,\n  prettyUrlPatterns: [{\n    pattern: '/start'\n  }, {\n    pattern: '/start/:step'\n  }, {\n    pattern: '/:lang/start'\n  }, {\n    pattern: '/:lang/start/:step'\n  }]\n}, {\n  page: 'docs',\n  prettyUrl: ({\n    lang,\n    article = ''\n  }) => `/${lang}/docs/${article}`,\n  prettyUrlPatterns: [{\n    pattern: '/docs'\n  }, {\n    pattern: '/docs/:article'\n  }, {\n    pattern: '/:lang/docs'\n  }, {\n    pattern: '/:lang/docs/:article'\n  }]\n}];\nconst nextRouter = new NextUrlRouter(routes);\nmodule.exports = {\n  nextRouter,\n  routes\n};","map":{"version":3,"sources":["/Users/han/Desktop/GitHub/omni-site/src/routes.js"],"names":["UrlPrettifier","require","default","NextUrlRouter","constructor","routes","options","root","linkPage","bind","forEachPattern","pageName","params","route","find","currentRoute","page","obj","as","href","paramsToQueryString","prettyUrl","apply","forEach","getPrettyUrlPatterns","prettyPattern","beforeRender","pattern","defaultParams","lang","prettyUrlPatterns","step","article","nextRouter","module","exports"],"mappings":"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","sourcesContent":["// The route base on next-url-prettifier\n// https://github.com/BDav24/next-url-prettifier\n// Client Usage: https://github.com/BDav24/next-url-prettifier#in-your-components\nconst UrlPrettifier = require('next-url-prettifier').default;\n\nclass NextUrlRouter extends UrlPrettifier {\n  constructor (routes, options = {}) {\n    super(routes, options);\n    this.root = options.root || '';\n    this.linkPage = this.linkPage.bind(this);\n    this.forEachPattern = this.forEachPattern.bind(this);\n  }\n\n  linkPage (pageName, params) {\n    const route = this.routes.find(currentRoute => currentRoute.page === pageName);\n    const obj = {\n      as: '',\n      href: `/${pageName}${this.paramsToQueryString(params)}`\n    };\n    if (route && route.prettyUrl) {\n      obj.as = this.root + (typeof route.prettyUrl === 'string' ? route.prettyUrl : route.prettyUrl(params));\n    }\n    return obj;\n  }\n\n  forEachPattern (apply) {\n    this.routes.forEach((route) => {\n      this.getPrettyUrlPatterns(route).forEach(prettyPattern =>\n        apply({\n          page: route.page,\n          beforeRender: route.beforeRender,\n          pattern: this.root + prettyPattern.pattern,\n          defaultParams: prettyPattern.defaultParams\n        })\n      );\n    });\n  }\n}\n\nconst routes = [\n  {\n    page: 'home',\n    prettyUrl: ({ lang }) => `/${lang}/home`,\n    prettyUrlPatterns: [\n      { pattern: '/' },\n      { pattern: '/home' },\n      { pattern: '/:lang/home' }\n    ]\n  },\n  {\n    page: 'start',\n    prettyUrl: ({ lang, step = '' }) =>\n      `/${lang}/start/${step}`,\n    prettyUrlPatterns: [\n      { pattern: '/start' },\n      { pattern: '/start/:step' },\n      { pattern: '/:lang/start' },\n      { pattern: '/:lang/start/:step' }\n    ]\n  },\n  {\n    page: 'docs',\n    prettyUrl: ({ lang, article = '' }) =>\n      `/${lang}/docs/${article}`,\n    prettyUrlPatterns: [\n      { pattern: '/docs' },\n      { pattern: '/docs/:article' },\n      { pattern: '/:lang/docs' },\n      { pattern: '/:lang/docs/:article' }\n    ]\n  }\n];\n\nconst nextRouter = new NextUrlRouter(routes);\n\nmodule.exports = {\n  nextRouter,\n  routes\n};"]},"metadata":{},"sourceType":"script"}