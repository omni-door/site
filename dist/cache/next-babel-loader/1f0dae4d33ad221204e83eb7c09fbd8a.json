{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport { UseLocale } from '@ctx/UseLocale';\nimport Layout from '@components/Layout';\nimport Start from '@components/Start';\nimport mapCtxToProps from '@utils/mapCtxToProps';\n\nfunction StartPage(props) {\n  _s();\n\n  var _useContext = useContext(UseLocale),\n      lang = _useContext.lang,\n      pageTitle = _useContext.locale.start.pageTitle;\n\n  return __jsx(Layout, {\n    title: pageTitle,\n    page: props.page\n  }, __jsx(Start, _extends({\n    lang: lang\n  }, props)));\n}\n\n_s(StartPage, \"ZjqfMonVxzeCR7Htz2/ty/uG3qY=\");\n\n_c = StartPage;\n\nStartPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", mapCtxToProps(ctx));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default StartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"sources":["/Users/han/Desktop/GitHub/omni-site/pages/start.tsx"],"names":["useContext","UseLocale","Layout","Start","mapCtxToProps","StartPage","props","lang","pageTitle","locale","start","page","getInitialProps","ctx"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAGA,SAASC,SAAT,CAAoBC,KAApB,EAA0C;AAAA;;AAAA,oBAQpCN,UAAU,CAACC,SAAD,CAR0B;AAAA,MAEtCM,IAFsC,eAEtCA,IAFsC;AAAA,MAKlCC,SALkC,eAGtCC,MAHsC,CAIpCC,KAJoC,CAKlCF,SALkC;;AASxC,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAEA,SADT;AAEE,IAAA,IAAI,EAAEF,KAAK,CAACK;AAFd,KAIE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ;AAAb,KAAwBD,KAAxB,EAJF,CADF;AAQD;;GAjBQD,S;;KAAAA,S;;AAmBTA,SAAS,CAACO,eAAV;AAAA,sEAA4B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CACnBT,aAAa,CAACS,GAAD,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeR,SAAf","sourcesContent":["import { useContext } from 'react';\nimport { UseLocale } from '@ctx/UseLocale';\nimport Layout from '@components/Layout';\nimport Start from '@components/Start';\nimport mapCtxToProps from '@utils/mapCtxToProps';\nimport type { MapCtxToProps } from '@utils/mapCtxToProps';\n\nfunction StartPage (props: MapCtxToProps) {\n  const {\n    lang,\n    locale: {\n      start : {\n        pageTitle\n      }\n    }\n  } = useContext(UseLocale);\n  return (\n    <Layout\n      title={pageTitle}\n      page={props.page}\n    >\n      <Start lang={lang} { ...props } />\n    </Layout>\n  );\n}\n\nStartPage.getInitialProps = async (ctx: any) => {\n  return mapCtxToProps(ctx);\n};\n\nexport default StartPage;"]},"metadata":{},"sourceType":"module"}