{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar isObject = function isObject(param) {\n  return param === Object(param);\n};\n\nvar paramsToStringList = function paramsToStringList(entries) {\n  return entries.reduce(function (result, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return result.concat(Array.isArray(value) ? paramsToStringList(value.map(function (arrayValue) {\n      return [\"\".concat(key, \"[]\"), arrayValue];\n    })) : [typeof value === 'string' || typeof value === 'number' ? \"\".concat(key, \"=\").concat(value) : '']);\n  }, []);\n};\n\nexport default function paramsToQueryString(params) {\n  var paramsString = isObject(params) ? paramsToStringList(Object.keys(params).sort().map(function (key) {\n    return [String(key), params[key]];\n  })).filter(function (chunk) {\n    return chunk.length > 0;\n  }).join('&') : '';\n  return paramsString.length > 0 ? \"?\".concat(paramsString) : '';\n}","map":null,"metadata":{},"sourceType":"module"}