"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNpmVersion = void 0;
var http_1 = __importDefault(require("http"));
var https_1 = __importDefault(require("https"));
var semver_1 = __importDefault(require("semver"));
var child_process_1 = require("child_process");
var logger_1 = require("./logger");
function getNpmVersion(pkgName, options) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, _b, protocol, _c, hostname, registry, checkUrl, npmViewCheck, request, lastVersion;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _a = options || {}, _b = _a.protocol, protocol = _b === void 0 ? 'https' : _b, _c = _a.hostname, hostname = _c === void 0 ? 'registry.npmjs.org' : _c;
                    registry = protocol + "://" + hostname;
                    checkUrl = registry + "/-/package/" + pkgName + "/dist-tags";
                    npmViewCheck = function () {
                        try {
                            return child_process_1.execSync("npm view " + pkgName + " version --registry=" + registry).toString().trim();
                        }
                        catch (e) {
                            return null;
                        }
                    };
                    request = protocol === 'https' ? https_1.default : http_1.default;
                    return [4 /*yield*/, new Promise(function (resolve, reject) {
                            request
                                .get(checkUrl, function (res) {
                                if (res.statusCode === 200) {
                                    var body_1 = '';
                                    res.on('data', function (data) { return (body_1 += data); });
                                    res.on('end', function () {
                                        resolve(JSON.parse(body_1).latest);
                                    });
                                }
                                else {
                                    resolve(npmViewCheck());
                                }
                            })
                                .on('error', function () { return resolve(npmViewCheck()); });
                        })];
                case 1:
                    lastVersion = _d.sent();
                    return [2 /*return*/, lastVersion];
            }
        });
    });
}
exports.getNpmVersion = getNpmVersion;
function npmVersionCheck(pkgName, v, options) {
    return __awaiter(this, void 0, void 0, function () {
        var version;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, getNpmVersion(pkgName, options)];
                case 1:
                    version = _a.sent();
                    if (version && semver_1.default.lt(v, version)) {
                        console.log('\n');
                        logger_1.logInfo("Please upgrade the " + pkgName + " to " + version + " for better use experience");
                        logger_1.logInfo("\u4E3A\u4E86\u66F4\u597D\u7684\u4F7F\u7528\u4F53\u9A8C\uFF0C\u8BF7\u5C06 " + pkgName + " \u7684\u7248\u672C\u5347\u7EA7\u81F3 " + version);
                        console.log('\n');
                        return [2 /*return*/, false];
                    }
                    return [2 /*return*/, true];
            }
        });
    });
}
exports.default = npmVersionCheck;
