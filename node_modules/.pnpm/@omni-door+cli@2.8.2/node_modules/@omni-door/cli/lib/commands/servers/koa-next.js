"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __importDefault(require("path"));
var http_1 = __importDefault(require("http"));
var https_1 = __importDefault(require("https"));
var utils_1 = require("@omni-door/utils");
var open_1 = __importDefault(require("../dev/open"));
function default_1(_a) {
    var _this = this;
    var dev = _a.dev, ipAddress = _a.ipAddress, _b = _a.proxyConfig, proxyConfig = _b === void 0 ? [] : _b, _c = _a.middlewareConfig, middlewareConfig = _c === void 0 ? [] : _c, corsConfig = _a.corsConfig, host = _a.host, listenHost = _a.listenHost, port = _a.port, httpsConfig = _a.httpsConfig, nextRouter = _a.nextRouter;
    var Koa = utils_1.requireCwd('koa');
    var next = utils_1.requireCwd('next');
    var Router = utils_1.requireCwd('koa-router');
    var bodyParser = utils_1.requireCwd('koa-bodyparser');
    var k2c = utils_1.requireCwd('koa2-connect');
    var statics = utils_1.requireCwd('koa-static');
    var cors = utils_1.requireCwd('@koa/cors');
    var proxy = utils_1.requireCwd('http-proxy-middleware');
    var pathToRegexp = utils_1.requireCwd('path-to-regexp').pathToRegexp;
    var publicPath = path_1.default.resolve(process.cwd(), 'public');
    var nextApp = next({ dev: dev });
    nextApp
        .prepare()
        .then(function () {
        var _a;
        var app = new Koa();
        var router = new Router();
        // cors
        app.use(cors(corsConfig));
        // middleware: http-proxy
        app.use(function (ctx, next) { return __awaiter(_this, void 0, void 0, function () {
            var path, needProxy, i, item, _a, route, config, err_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        path = ctx.path;
                        needProxy = false;
                        i = 0;
                        _b.label = 1;
                    case 1:
                        if (!(i < proxyConfig.length)) return [3 /*break*/, 7];
                        item = proxyConfig[i];
                        _a = typeof item === 'function' ? item({
                            ip: ipAddress,
                            port: port,
                            host: host,
                            middlewareConfig: middlewareConfig
                        }) : item, route = _a.route, config = _a.config;
                        _b.label = 2;
                    case 2:
                        _b.trys.push([2, 5, , 6]);
                        if (!(pathToRegexp(route).test(path) ||
                            new RegExp("^" + route).test(path))) return [3 /*break*/, 4];
                        needProxy = true;
                        return [4 /*yield*/, k2c(proxy(path, config))(ctx, next)];
                    case 3:
                        _b.sent();
                        return [3 /*break*/, 7];
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        err_1 = _b.sent();
                        utils_1.logWarn(err_1);
                        utils_1.logWarn("The http-proxy\u300C" + route + ")\u300Dmatch occur error");
                        utils_1.logWarn("http-proxy\u300C" + route + "\u300D\u5339\u914D\u5F02\u5E38");
                        return [3 /*break*/, 6];
                    case 6:
                        i++;
                        return [3 /*break*/, 1];
                    case 7:
                        if (!!needProxy) return [3 /*break*/, 9];
                        return [4 /*yield*/, next()];
                    case 8:
                        _b.sent();
                        return [3 /*break*/, 10];
                    case 9: return [2 /*return*/];
                    case 10: return [2 /*return*/];
                }
            });
        }); });
        // middleware: custom
        var middlewares = __spreadArrays(middlewareConfig);
        for (var i = 0; i < middlewares.length; i++) {
            var item = middlewares[i];
            var _b = typeof item === 'function' ? item({
                ip: ipAddress,
                port: port,
                host: host,
                proxyConfig: proxyConfig
            }) : item, route = _b.route, callback = _b.callback, method = _b.method;
            var _method = ((_a = method === null || method === void 0 ? void 0 : method.toLowerCase()) !== null && _a !== void 0 ? _a : 'get');
            var anyStr = '@#$%^#*(&^!~)::;;".._--';
            var wildcardRoute = !route || pathToRegexp(route).test(anyStr) || new RegExp("^" + route).test(anyStr);
            if (wildcardRoute) {
                router.use(callback);
            }
            else {
                router[_method](route, callback);
            }
        }
        // inject routes
        // based on next-url-prettifier
        // https://github.com/BDav24/next-url-prettifier
        nextRouter && (nextRouter === null || nextRouter === void 0 ? void 0 : nextRouter.forEachPattern(function (_a) {
            var page = _a.page, pattern = _a.pattern, defaultParams = _a.defaultParams, beforeRender = _a.beforeRender;
            return router.get(pattern, function (ctx, next) { return __awaiter(_this, void 0, void 0, function () {
                var shouldRender, req, res, query, params, err_2, err_3;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            shouldRender = true;
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 6, , 7]);
                            req = ctx.req, res = ctx.res, query = ctx.query, params = ctx.params;
                            if (!(typeof beforeRender === 'function')) return [3 /*break*/, 5];
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 4, , 5]);
                            return [4 /*yield*/, beforeRender(ctx, next)];
                        case 3:
                            shouldRender = _a.sent();
                            return [3 /*break*/, 5];
                        case 4:
                            err_2 = _a.sent();
                            utils_1.logWarn(err_2);
                            utils_1.logWarn("The " + page + "'s beforeRender error!");
                            utils_1.logWarn(page + " \u9875\u9762 beforeRender \u6267\u884C\u5F02\u5E38");
                            return [3 /*break*/, 5];
                        case 5:
                            shouldRender && nextApp.render(req, res, "/" + page, Object.assign(Object.create(null), defaultParams, query, params, utils_1._typeof(shouldRender) === 'object' ? shouldRender : null));
                            return [3 /*break*/, 7];
                        case 6:
                            err_3 = _a.sent();
                            shouldRender = false;
                            utils_1.logWarn(JSON.stringify(err_3));
                            utils_1.logWarn("The " + page + " router error");
                            utils_1.logWarn(page + " \u8DEF\u7531\u51FA\u9519");
                            return [3 /*break*/, 7];
                        case 7:
                            if (shouldRender) {
                                ctx.status = 200;
                                ctx.respond = false;
                            }
                            return [2 /*return*/];
                    }
                });
            }); });
        }));
        // other source redirect to '/'
        router.get('(.*)', function (ctx) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, nextApp.render(ctx.req, ctx.res, '/', ctx.query)];
                    case 1:
                        _a.sent();
                        ctx.status = 200;
                        ctx.respond = false;
                        return [2 /*return*/];
                }
            });
        }); });
        // middleware: static-server, body-parser and router
        app.use(statics(publicPath));
        app.use(bodyParser());
        app.use(router.routes()).use(router.allowedMethods());
        var server;
        var serverUrl = host + ":" + port;
        if (httpsConfig) {
            server = https_1.default.createServer({
                key: httpsConfig.key,
                cert: httpsConfig.cert
            }, app.callback());
            serverUrl = 'https://' + serverUrl;
        }
        else {
            server = http_1.default.createServer(app.callback());
            serverUrl = 'http://' + serverUrl;
        }
        server.listen(port, listenHost || host, function () { return __awaiter(_this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = dev;
                        if (!_a) return [3 /*break*/, 2];
                        return [4 /*yield*/, open_1.default(serverUrl)];
                    case 1:
                        _a = (_b.sent());
                        _b.label = 2;
                    case 2:
                        _a;
                        utils_1.logInfo("The server running with " + (dev ? 'DEV' : 'PROD') + "-MODE!");
                        utils_1.logInfo('> Ready on: ' + serverUrl);
                        return [2 /*return*/];
                }
            });
        }); });
    })
        .catch(function (err) {
        var error = new Error(err);
        utils_1.logErr(error + "\nThe Error stack: " + error.stack);
    });
}
exports.default = default_1;
