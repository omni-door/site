"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var mkcert = __importStar(require("mkcert"));
var utils_1 = require("@omni-door/utils");
var servers_1 = require("../servers");
var open_1 = __importDefault(require("./open"));
function server(_a) {
    var p = _a.p, host = _a.host, httpsConfig = _a.https, CA = _a.CA, serverType = _a.serverType, projectType = _a.projectType, _b = _a.devMiddlewareOptions, devMiddlewareOptions = _b === void 0 ? {} : _b, webpackConfig = _a.webpackConfig, _c = _a.proxyConfig, proxyConfig = _c === void 0 ? [] : _c, _d = _a.middlewareConfig, middlewareConfig = _d === void 0 ? [] : _d, nextRouter = _a.nextRouter, corsConfig = _a.corsConfig, favicon = _a.favicon;
    return __awaiter(this, void 0, void 0, function () {
        var CWD, ip, ipAddress, serverHost, openHost, serverUrl_1, ServerDevCli, autoOpenServer, needCustomServer, isHttps, key, cert, cacheDirPath, keyPath, certPath, ca, certificate, err_1, serverBasicOptions, detectPort_1, openAfterPortAvailable_1, err_2;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    _e.trys.push([0, 12, , 13]);
                    CWD = process.cwd();
                    ip = utils_1.requireCwd('ip');
                    ipAddress = ip.address();
                    serverHost = host || '0.0.0.0';
                    openHost = host || ipAddress || '0.0.0.0';
                    serverUrl_1 = openHost + ':' + p;
                    ServerDevCli = {
                        storybook: path_1.default.resolve(CWD, 'node_modules/.bin/start-storybook') + " -p " + p + " -h " + serverHost + " --quiet --ci",
                        docz: path_1.default.resolve(CWD, 'node_modules/.bin/docz') + " dev -p " + p + " --host " + serverHost,
                        bisheng: path_1.default.resolve(CWD, 'node_modules/.bin/bisheng') + " start",
                        styleguidist: path_1.default.resolve(CWD, 'node_modules/.bin/styleguidist') + " server --port " + p + " --host " + serverHost,
                        dumi: path_1.default.resolve(CWD, 'node_modules/.bin/dumi') + " dev --port " + p + " --host " + serverHost,
                        next: path_1.default.resolve(CWD, 'node_modules/.bin/next') + " dev --port " + p + " --hostname " + serverHost,
                        nuxt: path_1.default.resolve(CWD, 'node_modules/.bin/nuxt') + " dev --port " + p + " --hostname " + serverHost
                    };
                    autoOpenServer = [
                        'storybook',
                        'docz',
                        'styleguidist',
                        'dumi',
                        'next'
                    ];
                    needCustomServer = !serverType || serverType === 'default' || serverType === 'express-webpack' || serverType === 'koa-next' || serverType === 'koa-nuxt';
                    if (!needCustomServer) return [3 /*break*/, 10];
                    isHttps = false;
                    key = void 0, cert = void 0;
                    if (!httpsConfig) return [3 /*break*/, 9];
                    if (!(typeof httpsConfig === 'boolean')) return [3 /*break*/, 8];
                    _e.label = 1;
                case 1:
                    _e.trys.push([1, 6, , 7]);
                    cacheDirPath = path_1.default.resolve(__dirname, '../../../.omni_cache');
                    keyPath = path_1.default.resolve(cacheDirPath, openHost + "-key.pem");
                    certPath = path_1.default.resolve(cacheDirPath, openHost + "-cert.pem");
                    if (!fs_1.default.existsSync(keyPath)) return [3 /*break*/, 2];
                    key = fs_1.default.readFileSync(keyPath);
                    cert = fs_1.default.readFileSync(certPath);
                    return [3 /*break*/, 5];
                case 2: return [4 /*yield*/, mkcert.createCA(__assign({ organization: 'OMNI-DOOR', countryCode: 'CN', state: 'SHANGHAI', locality: 'SONGJIANG', validityDays: 365 }, CA))];
                case 3:
                    ca = _e.sent();
                    return [4 /*yield*/, mkcert.createCert({
                            domains: [openHost, '127.0.0.1', 'localhost'],
                            validityDays: 365,
                            caKey: ca.key,
                            caCert: ca.cert
                        })];
                case 4:
                    certificate = _e.sent();
                    key = certificate.key;
                    cert = certificate.cert;
                    utils_1.outputFile({
                        file_path: keyPath,
                        file_content: key
                    });
                    utils_1.outputFile({
                        file_path: certPath,
                        file_content: cert
                    });
                    _e.label = 5;
                case 5:
                    isHttps = true;
                    return [3 /*break*/, 7];
                case 6:
                    err_1 = _e.sent();
                    utils_1.logWarn(err_1);
                    utils_1.logWarn("Failing to generate the certificate (\u751F\u6210\u8BC1\u4E66\u5931\u8D25)!\nYou can specify the certificate manually (\u53EF\u901A\u8FC7\u4EE5\u4E0B\u65B9\u5F0F\u624B\u52A8\u6307\u5B9A\u8BC1\u4E66):\n\n            https: {\n              key: fs.readFileSync(path.resolve(${your_path_to_key})),\n              cert: fs.readFileSync(path.resolve(${your_path_to_cert}))\n            }");
                    isHttps = false;
                    return [3 /*break*/, 7];
                case 7: return [3 /*break*/, 9];
                case 8:
                    key = httpsConfig.key;
                    cert = httpsConfig.cert;
                    _e.label = 9;
                case 9:
                    if (isHttps && (!key || !cert)) {
                        utils_1.logWarn('Missing the certificate, start the dev-server with http');
                        utils_1.logWarn('证书缺失，将以http启动开发服务');
                        isHttps = false;
                    }
                    serverBasicOptions = {
                        middlewareConfig: middlewareConfig,
                        proxyConfig: proxyConfig,
                        ipAddress: ipAddress,
                        host: openHost,
                        listenHost: serverHost,
                        port: p,
                        httpsConfig: isHttps ? { key: key, cert: cert } : void 0
                    };
                    switch (projectType) {
                        case 'ssr-react':
                            servers_1.KNServer(__assign({ dev: process.env.NODE_ENV === 'production' ? false : true, nextRouter: nextRouter,
                                corsConfig: corsConfig }, serverBasicOptions));
                            break;
                        case 'ssr-vue':
                            utils_1.logWarn('Not support ssr-vue yet');
                            utils_1.logWarn('暂不支持 ssr-vue 项目');
                            break;
                        case 'spa-react':
                        case 'spa-react-pc':
                        case 'spa-vue':
                            servers_1.EWServer(__assign({ webpackConfig: webpackConfig,
                                devMiddlewareOptions: devMiddlewareOptions,
                                favicon: favicon }, serverBasicOptions));
                            break;
                    }
                    return [3 /*break*/, 11];
                case 10:
                    serverUrl_1 = 'http://' + serverUrl_1;
                    utils_1.exec([ServerDevCli[serverType]]);
                    if (~autoOpenServer.indexOf(serverType)) {
                        detectPort_1 = utils_1.requireCwd('detect-port');
                        openAfterPortAvailable_1 = function () {
                            setTimeout(function () {
                                detectPort_1(p)
                                    .then(function (_p) {
                                    if (_p === p) {
                                        openAfterPortAvailable_1();
                                    }
                                    else {
                                        open_1.default(serverUrl_1);
                                    }
                                })
                                    .catch(function (err) {
                                    utils_1.logWarn(err);
                                    open_1.default(serverUrl_1);
                                });
                            }, 1000);
                        };
                        openAfterPortAvailable_1();
                    }
                    _e.label = 11;
                case 11: return [3 /*break*/, 13];
                case 12:
                    err_2 = _e.sent();
                    utils_1.logErr(err_2);
                    process.exit(1);
                    return [3 /*break*/, 13];
                case 13: return [2 /*return*/];
            }
        });
    });
}
exports.default = server;
