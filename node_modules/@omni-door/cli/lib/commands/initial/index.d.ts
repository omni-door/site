import type { STRATEGY } from '@omni-door/utils';
declare type OptionType = {
    react_basic?: boolean | string;
    react_standard?: boolean | string;
    react_entire?: boolean | string;
    vue_basic?: boolean | string;
    vue_standard?: boolean | string;
    vue_entire?: boolean | string;
    react_ssr?: boolean | string;
    react_components?: boolean | string;
    vue_components?: boolean | string;
    toolkit?: boolean | string;
    install: boolean;
};
declare type BeforeRes = {
    create_dir?: boolean;
    dir_name?: string;
    stdout?: boolean;
};
declare type AfterRes = {
    success?: boolean;
    msg?: string;
};
declare type OptionCustom = {
    before?: (dirName: string) => (void | BeforeRes | Promise<BeforeRes>);
    after?: () => (void | AfterRes | Promise<AfterRes>);
    tplPkj?: string;
    tplPkjTag?: string;
    tplPkjParams?: string[];
    pkjFieldName?: string;
    configFileName?: string;
    initPath?: string;
};
export default function (strategy: STRATEGY, { react_basic, react_standard, react_entire, vue_basic, vue_standard, vue_entire, react_ssr, react_components, vue_components, toolkit, install }: OptionType, option?: OptionCustom): Promise<void>;
export {};
