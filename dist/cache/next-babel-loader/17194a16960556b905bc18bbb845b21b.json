{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, `文档`), mdx(\"h2\", null, `支持的项目类型简介`), mdx(\"h3\", null, `SPA 应用`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `基于 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), `React`), ` UI 框架`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `基于 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reacttraining.com/react-router/web/example/basic\"\n  }), `React-Router`), ` 实现前端路由`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` 进行开发`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webpack.js.org/\"\n  }), `webpack`), ` 打包`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `遵守 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), `eslint`), ` 规范`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `遵守 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stylelint.io/\"\n  }), `stylelint`), ` 规范`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `采用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), `prettier`), ` 美化代码格式`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `无缝支持 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/css-modules/css-modules\"\n  }), `CSS Modules`), ` 和 全局CSS，无需额外配置`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h3\", null, `SSR 应用`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `基于 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), `React`), ` 框架`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `基于 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/\"\n  }), `nextjs`), ` 企业级高性能 Node 框架`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` 进行开发`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `支持 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://koajs.com/\"\n  }), `koa`), ` 自定义 node 服务`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `搜索引擎友好 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zh.wikipedia.org/wiki/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E%E6%9C%80%E4%BD%B3%E5%8C%96\"\n  }), `SEO`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h3\", null, `Component 组件(库)项目`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `支持 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://storybook.js.org/\"\n  }), `storybook`), `、`, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docz.site/\"\n  }), `docz`), `、`, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react-styleguidist.js.org/\"\n  }), `styleguidist`), ` 多种组件库Demo和文档框架`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `基于 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/\"\n  }), `React`), ` 的组件库`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` 进行开发`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gulpjs.com/\"\n  }), `gulp`), ` 打包`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `遵守 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), `eslint`), ` 规范`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `遵守 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stylelint.io/\"\n  }), `stylelint`), ` 规范`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `遵守 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://commitlint.js.org/\"\n  }), `commitlint`), ` 规范`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `采用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), `prettier`), ` 美化代码格式`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h3\", null, `toolkit 工具库项目`), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `集成标准化初始化、构建、发布虎扑 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hupu.feishu.cn/docs/doccn8pGr7IYYV54ytpBsHT3tDd#bcLZTY\"\n  }), `bridge-plugin`), ` (@hupu/dandelion) 项目的能力`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.typescriptlang.org/\"\n  }), `typescript`), ` 进行开发`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `使用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rollupjs.org/guide/en\"\n  }), `rollup`), ` 打包`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `遵守 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://eslint.org/\"\n  }), `eslint`), ` 规范`)), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"input\", _extends({\n    parentName: \"p\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), ` `, `采用 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prettier.io/docs/en/install.html\"\n  }), `prettier`), ` 美化代码格式`), mdx(\"p\", {\n    parentName: \"li\"\n  }, `……`))), mdx(\"h2\", null, `脚手架命令清单`), mdx(\"p\", null, `你可以在命令行中简单输入 `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `omni -h`), ` 查看所有的命令：`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `  Commands:\n\n    init [strategy] [options]  初始化你的项目，[strategy(策略)] 可用是stable(默认) 或 lastst\n    dev [options]              omni dev -p [port]\n    new <module> [options]     omni new [module] [-f | -c]\n    build                      根据 [omni.config.js] 打包构建你的项目\n    release [options]          根据 [omni.config.js] 发布你的项目\n`)), mdx(\"h3\", null, `omni init`), mdx(\"h4\", null, `初始化一个项目`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init\n`)), mdx(\"h4\", null, `用最新的依赖@lastest初始化项目`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init lastest\n`)), mdx(\"h4\", null, `初始化项目但不安装依赖`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init -n\n`)), mdx(\"h4\", null, `套用模板一键初始化项目`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init -t [projectName]\n`)), mdx(\"p\", null, `or`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `omni init --entire [projectName]\n`)), mdx(\"h4\", null, `选项`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `使用: omni init [strategy] [options]\n\nArguments:\n\n  strategy                 stable or latest\n\n  Options:\n    -rb, --react_basic [name]       创建一个最基本的 React 单页应用\n    -rs, --react_standard [name]    创建一个标准的 React 单页应用\n    -re, --react_entire [name]      创建一个全量的 React 单页应用\n    -rS, --react_ssr [name]         创建一个 React SSR 应用\n    -rc, --react_components [name]  创建一个 React 组件库\n    -t, --toolkit [name]            创建一个工具库\n    -n, --no-install                初始化项目不安装任何依赖\n    -P, --path <path>               创建项目的工作路径\n    -h, --help               output usage information\n`)), mdx(\"h3\", null, `omni dev`), mdx(\"h4\", null, `各种用法`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni dev\n\n  omni dev -p 8200 // 启动一个端口号为 8200 的开发服务\n\n  omni dev -h dev.domain.com // 启动一个host为 dev.domain.com 的开发服务\n\n\n  omni dev -p 8200 -h dev.domain.com // 启动一个端口号为 8200 且 host为 dev.domain.com 的 开发服务\n\n`)), mdx(\"h4\", null, `选项`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `使用: omni dev [options]\n\nomni dev [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      根据指定的端口号启动开发服务\n  -H, --hostname <host>  根据指定的hostname启动开发服务\n  -P, --path <path>      启动开发服务的工作路径\n  -h, --help             output usage information\n`)), mdx(\"h3\", null, `omni start`), mdx(\"p\", null, `用法和 `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `omni dev`), ` 略同`), mdx(\"h4\", null, `选项`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `使用: omni start [options]\n\nomni start [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      根据指定的端口号启动生产服务\n  -H, --hostname <host>  根据指定的hostname启动生产服务\n  -P, --path <path>      启动生产服务的工作路径\n  -h, --help             output usage information\n`)), mdx(\"h3\", null, `omni new`), mdx(\"h4\", null, `各种用法`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni new\n\n  omni new Button // 新建一个名为 Button 的组件\n\n  omni new -c // 新建一个类组件\n\n  omni new -c Button // 新建一个名为 Button 的类组件\n`)), mdx(\"h4\", null, `选项`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `使用: omni new [name] [options]\n\nomni new [name] [-f | -c] [-P <path>]\n\nArguments:\n\n  module           可选！组件名称。\n\nOptions:\n  -f, --function     创建一个函数组件\n  -c, --class        创建一个类组件\n  -P, --path <path>  创建组件的工作路径\n  -h, --help        output usage information\n`)), mdx(\"h3\", null, `omni build`), mdx(\"h4\", null, `各种用法`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni build\n\n  omni build -n // 构建时避开所有预校验\n\n  omni build -c $pathTo/build.config.js // 根据指定路径构建项目\n`)), mdx(\"h4\", null, `选项`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `使用: omni build [options]\n\n根据 [omni.config.js] 的 build 字段构建项目\n\nOptions:\n  -c, --config <path>  指定构建的配置文件路径\n  -n, --no-verify      绕过所有预检直接构建\n  -P, --path <path>    构建的工作路径\n  -h, --help           output usage information\n`)), mdx(\"h3\", null, `omni release`), mdx(\"h4\", null, `各种用法`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), `  omni new\n\n  omni new Button // 新建一个名为 Button 的组件\n\n  omni new -c // 新建一个类组件\n\n  omni new -c Button // 新建一个名为 Button 的类组件\n`)), mdx(\"h4\", null, `选项`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), `使用: omni release [options]\n\n根据 [omni.config.js] 的 release 字段发布项目\n\nOptions:\n  -a, --automatic         发布并自动迭代版本号\n  -i, --ignore            发布并忽视版本号的迭代\n  -m, --manual <version>  发布并手动指定版本号\n  -t, --tag <tag>         发布时指定tag\n  -n, --no-verify         绕过所有的预检直接发布\n  -P, --path <path>       发布的工作路径\n  -h, --help              output usage information\n`)), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `build `, `[options]`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni build`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni build -n`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni build -c $pathTo/build.config.js`)))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `release `, `[options]`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni release`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni release -n`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni release -a`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni release -i`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni release -m`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `omni release -t`))))), mdx(\"h2\", null, `关于 omni.config.js 配置文件`), mdx(\"h3\", null, `type 项目类型`), mdx(\"p\", null, `OMNI 会根据不同的项目类型决定整个初始化、构建、创建模板的过程`), mdx(\"p\", null, `目前支持的项目类型有：`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `spa-react - React单页应用`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `ssr-react - React服务端渲染应用`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `component-react - React组件库`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `toolkit - SDK工具包`))), mdx(\"h3\", null, `dev 开发服务`), mdx(\"p\", null, `开发服务基于express，搭配 webpack-dev-middleware、webpack-hot-middleware、http-proxy-middleware 等中间件，实现了热更新、接口代理等常用功能，并提供了中间件的自定义、端口号、log日志输出级别、webpack配置等个性化定制方案。`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `middleware - 中间件配置，参考下面👇的类型：`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `{\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `  or`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  proxyConfig?: (ProxyItem | ProxyFn)[];\n}) => {\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `webpack - 开发服务端webpack配置`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `proxy - 开发服务代理配置`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `{\n  route: '/api', // 代理API的本地服务的地址\n  config: {\n    target: 'http://www.api.com/api', // 代理API的实际地址\n    changeOrigin: true // 是否改变host\n  }\n}\n`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `  or`), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  middlewareConfig?: (MiddlewareItem | MiddlewareFn)[];\n}) => {\n  route: string;\n  config: Config;\n}\n`)), mdx(\"p\", {\n    parentName: \"li\"\n  }, `  更多配置详见 `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chimurai/http-proxy-middleware\"\n  }), `http-proxy-middleware`))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `port - 开发服务启动的端口号`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `host - 开发服务启动的host`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `https - 开发服务以https协议启动，可自定义 `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `key`), ` 和 `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `cert`))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `serverType - 开发服务的类型`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `logLevel - 开发服务日志输出等级，可选 'debug'、'info'、'warn'、'error'、'silent'`))), mdx(\"h3\", null, `build 构建配置`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `autoRelease - 构建完成后是否自动发布`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `srcDir - 构建资源输入路径`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `outDir - 构建结果输出路径`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `esmDir - 构建结果输出路径(符合es6 module规范)`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `hash - 构建的资源是否加上hash，可选 'contenthash'、'chunkhash'、'hash'(传入true则是contenthash)`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `configuration - 构建阶段的自定义配置回调，返回自定义的配置`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `reserve - 配置未经过打包，但需要保留进构建结果的资源`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `style - 构建结果是否保留样式文件`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `assets - 构建结果保留其他资源的路径`)))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `preflight - 构建前的飞行检查`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `typescript - 是否处理ts或tsx文件`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `test - 是否进行单元测试 `)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `eslint - 是否进行eslint检测`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `prettier - 是否进行prettier检测`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `stylelint - 是否进行stylelint检测`))))), mdx(\"h3\", null, `release`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `git - 发布的git仓库地址`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `npm - 发布的npm仓库地址`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `preflight - 发布前的飞行检查`), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `test - 发布前是否进行单元测试`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `eslint - 发布前是否进行eslint检测`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `prettier - 发布前是否进行prettier检测`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `stylelint - 发布前是否进行stylelint检测`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `commitlint - 发布前是否进行commitlint检测`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `branch - 发布前进行分支检测，设置为空字符串则不会检测`))))), mdx(\"h3\", null, `template 新建模板配置`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `root - 生成模板的根路径`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `typescript - 是否创建ts文件`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `test - 是否创建单元测试文件`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `stylesheet - 样式文件类型`)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, `readme - `, `[true, 'mdx']`, ` (`, `[是否生成ReadMe文件, 创建md 或 mdx文件]`, `)`))), mdx(\"h3\", null, `plugins`), mdx(\"p\", null, `插件集合，插件需满足下面的类型：`), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), `type OmniPlugin = {\n  name: string;\n  stage: PluginStage;\n  handler: PluginHandler;\n};\n\ntype PluginStage = 'new' | 'build' | 'release';\ninterface PluginHandler {\n  (config: Omit<OmniConfig, 'plugins'>): Promise<any>;\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/han/Desktop/GitHub/omni-site/src/components/Docs/docs-cn.md"],"names":["React","mdx","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`文档`}</h1>\n    <h2>{`支持的项目类型简介`}</h2>\n    <h3>{`SPA 应用`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`基于 `}<a parentName=\"p\" {...{\n            \"href\": \"https://reactjs.org/\"\n          }}>{`React`}</a>{` UI 框架`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`基于 `}<a parentName=\"p\" {...{\n            \"href\": \"https://reacttraining.com/react-router/web/example/basic\"\n          }}>{`React-Router`}</a>{` 实现前端路由`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` 进行开发`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://webpack.js.org/\"\n          }}>{`webpack`}</a>{` 打包`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`遵守 `}<a parentName=\"p\" {...{\n            \"href\": \"https://eslint.org/\"\n          }}>{`eslint`}</a>{` 规范`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`遵守 `}<a parentName=\"p\" {...{\n            \"href\": \"https://stylelint.io/\"\n          }}>{`stylelint`}</a>{` 规范`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`采用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://prettier.io/docs/en/install.html\"\n          }}>{`prettier`}</a>{` 美化代码格式`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`无缝支持 `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/css-modules/css-modules\"\n          }}>{`CSS Modules`}</a>{` 和 全局CSS，无需额外配置`}</p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h3>{`SSR 应用`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`基于 `}<a parentName=\"p\" {...{\n            \"href\": \"https://reactjs.org/\"\n          }}>{`React`}</a>{` 框架`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`基于 `}<a parentName=\"p\" {...{\n            \"href\": \"https://nextjs.org/\"\n          }}>{`nextjs`}</a>{` 企业级高性能 Node 框架`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` 进行开发`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`支持 `}<a parentName=\"p\" {...{\n            \"href\": \"https://koajs.com/\"\n          }}>{`koa`}</a>{` 自定义 node 服务`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`搜索引擎友好 `}<a parentName=\"p\" {...{\n            \"href\": \"https://zh.wikipedia.org/wiki/%E6%90%9C%E5%B0%8B%E5%BC%95%E6%93%8E%E6%9C%80%E4%BD%B3%E5%8C%96\"\n          }}>{`SEO`}</a></p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h3>{`Component 组件(库)项目`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`支持 `}<a parentName=\"p\" {...{\n            \"href\": \"https://storybook.js.org/\"\n          }}>{`storybook`}</a>{`、`}<a parentName=\"p\" {...{\n            \"href\": \"https://docz.site/\"\n          }}>{`docz`}</a>{`、`}<a parentName=\"p\" {...{\n            \"href\": \"https://react-styleguidist.js.org/\"\n          }}>{`styleguidist`}</a>{` 多种组件库Demo和文档框架`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`基于 `}<a parentName=\"p\" {...{\n            \"href\": \"https://reactjs.org/\"\n          }}>{`React`}</a>{` 的组件库`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` 进行开发`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://gulpjs.com/\"\n          }}>{`gulp`}</a>{` 打包`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`遵守 `}<a parentName=\"p\" {...{\n            \"href\": \"https://eslint.org/\"\n          }}>{`eslint`}</a>{` 规范`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`遵守 `}<a parentName=\"p\" {...{\n            \"href\": \"https://stylelint.io/\"\n          }}>{`stylelint`}</a>{` 规范`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`遵守 `}<a parentName=\"p\" {...{\n            \"href\": \"https://commitlint.js.org/\"\n          }}>{`commitlint`}</a>{` 规范`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`采用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://prettier.io/docs/en/install.html\"\n          }}>{`prettier`}</a>{` 美化代码格式`}</p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h3>{`toolkit 工具库项目`}</h3>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`集成标准化初始化、构建、发布虎扑 `}<a parentName=\"p\" {...{\n            \"href\": \"https://hupu.feishu.cn/docs/doccn8pGr7IYYV54ytpBsHT3tDd#bcLZTY\"\n          }}>{`bridge-plugin`}</a>{` (@hupu/dandelion) 项目的能力`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.typescriptlang.org/\"\n          }}>{`typescript`}</a>{` 进行开发`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`使用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://rollupjs.org/guide/en\"\n          }}>{`rollup`}</a>{` 打包`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`遵守 `}<a parentName=\"p\" {...{\n            \"href\": \"https://eslint.org/\"\n          }}>{`eslint`}</a>{` 规范`}</p>\n      </li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}>\n        <p parentName=\"li\"><input parentName=\"p\" {...{\n            \"type\": \"checkbox\",\n            \"checked\": true,\n            \"disabled\": true\n          }}></input>{` `}{`采用 `}<a parentName=\"p\" {...{\n            \"href\": \"https://prettier.io/docs/en/install.html\"\n          }}>{`prettier`}</a>{` 美化代码格式`}</p>\n        <p parentName=\"li\">{`……`}</p>\n      </li>\n    </ul>\n    <h2>{`脚手架命令清单`}</h2>\n    <p>{`你可以在命令行中简单输入 `}<inlineCode parentName=\"p\">{`omni -h`}</inlineCode>{` 查看所有的命令：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`  Commands:\n\n    init [strategy] [options]  初始化你的项目，[strategy(策略)] 可用是stable(默认) 或 lastst\n    dev [options]              omni dev -p [port]\n    new <module> [options]     omni new [module] [-f | -c]\n    build                      根据 [omni.config.js] 打包构建你的项目\n    release [options]          根据 [omni.config.js] 发布你的项目\n`}</code></pre>\n    <h3>{`omni init`}</h3>\n    <h4>{`初始化一个项目`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init\n`}</code></pre>\n    <h4>{`用最新的依赖@lastest初始化项目`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init lastest\n`}</code></pre>\n    <h4>{`初始化项目但不安装依赖`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init -n\n`}</code></pre>\n    <h4>{`套用模板一键初始化项目`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init -t [projectName]\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`omni init --entire [projectName]\n`}</code></pre>\n    <h4>{`选项`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`使用: omni init [strategy] [options]\n\nArguments:\n\n  strategy                 stable or latest\n\n  Options:\n    -rb, --react_basic [name]       创建一个最基本的 React 单页应用\n    -rs, --react_standard [name]    创建一个标准的 React 单页应用\n    -re, --react_entire [name]      创建一个全量的 React 单页应用\n    -rS, --react_ssr [name]         创建一个 React SSR 应用\n    -rc, --react_components [name]  创建一个 React 组件库\n    -t, --toolkit [name]            创建一个工具库\n    -n, --no-install                初始化项目不安装任何依赖\n    -P, --path <path>               创建项目的工作路径\n    -h, --help               output usage information\n`}</code></pre>\n    <h3>{`omni dev`}</h3>\n    <h4>{`各种用法`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni dev\n\n  omni dev -p 8200 // 启动一个端口号为 8200 的开发服务\n\n  omni dev -h dev.domain.com // 启动一个host为 dev.domain.com 的开发服务\n\n\n  omni dev -p 8200 -h dev.domain.com // 启动一个端口号为 8200 且 host为 dev.domain.com 的 开发服务\n\n`}</code></pre>\n    <h4>{`选项`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`使用: omni dev [options]\n\nomni dev [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      根据指定的端口号启动开发服务\n  -H, --hostname <host>  根据指定的hostname启动开发服务\n  -P, --path <path>      启动开发服务的工作路径\n  -h, --help             output usage information\n`}</code></pre>\n    <h3>{`omni start`}</h3>\n    <p>{`用法和 `}<inlineCode parentName=\"p\">{`omni dev`}</inlineCode>{` 略同`}</p>\n    <h4>{`选项`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`使用: omni start [options]\n\nomni start [-p <port>] [-H <host>] [-P <path>]\n\nOptions:\n  -p, --port <port>      根据指定的端口号启动生产服务\n  -H, --hostname <host>  根据指定的hostname启动生产服务\n  -P, --path <path>      启动生产服务的工作路径\n  -h, --help             output usage information\n`}</code></pre>\n    <h3>{`omni new`}</h3>\n    <h4>{`各种用法`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni new\n\n  omni new Button // 新建一个名为 Button 的组件\n\n  omni new -c // 新建一个类组件\n\n  omni new -c Button // 新建一个名为 Button 的类组件\n`}</code></pre>\n    <h4>{`选项`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`使用: omni new [name] [options]\n\nomni new [name] [-f | -c] [-P <path>]\n\nArguments:\n\n  module           可选！组件名称。\n\nOptions:\n  -f, --function     创建一个函数组件\n  -c, --class        创建一个类组件\n  -P, --path <path>  创建组件的工作路径\n  -h, --help        output usage information\n`}</code></pre>\n    <h3>{`omni build`}</h3>\n    <h4>{`各种用法`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni build\n\n  omni build -n // 构建时避开所有预校验\n\n  omni build -c $pathTo/build.config.js // 根据指定路径构建项目\n`}</code></pre>\n    <h4>{`选项`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`使用: omni build [options]\n\n根据 [omni.config.js] 的 build 字段构建项目\n\nOptions:\n  -c, --config <path>  指定构建的配置文件路径\n  -n, --no-verify      绕过所有预检直接构建\n  -P, --path <path>    构建的工作路径\n  -h, --help           output usage information\n`}</code></pre>\n    <h3>{`omni release`}</h3>\n    <h4>{`各种用法`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`  omni new\n\n  omni new Button // 新建一个名为 Button 的组件\n\n  omni new -c // 新建一个类组件\n\n  omni new -c Button // 新建一个名为 Button 的类组件\n`}</code></pre>\n    <h4>{`选项`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`使用: omni release [options]\n\n根据 [omni.config.js] 的 release 字段发布项目\n\nOptions:\n  -a, --automatic         发布并自动迭代版本号\n  -i, --ignore            发布并忽视版本号的迭代\n  -m, --manual <version>  发布并手动指定版本号\n  -t, --tag <tag>         发布时指定tag\n  -n, --no-verify         绕过所有的预检直接发布\n  -P, --path <path>       发布的工作路径\n  -h, --help              output usage information\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`build `}{`[options]`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni build`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni build -n`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni build -c $pathTo/build.config.js`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`release `}{`[options]`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni release`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni release -n`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni release -a`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni release -i`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni release -m`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`omni release -t`}</p>\n          </li>\n        </ul>\n      </li>\n    </ol>\n    <h2>{`关于 omni.config.js 配置文件`}</h2>\n    <h3>{`type 项目类型`}</h3>\n    <p>{`OMNI 会根据不同的项目类型决定整个初始化、构建、创建模板的过程`}</p>\n    <p>{`目前支持的项目类型有：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`spa-react - React单页应用`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`ssr-react - React服务端渲染应用`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`component-react - React组件库`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`toolkit - SDK工具包`}</p>\n      </li>\n    </ul>\n    <h3>{`dev 开发服务`}</h3>\n    <p>{`开发服务基于express，搭配 webpack-dev-middleware、webpack-hot-middleware、http-proxy-middleware 等中间件，实现了热更新、接口代理等常用功能，并提供了中间件的自定义、端口号、log日志输出级别、webpack配置等个性化定制方案。`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`middleware - 中间件配置，参考下面👇的类型：`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`{\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  or`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  proxyConfig?: (ProxyItem | ProxyFn)[];\n}) => {\n  route: string;\n  callback: (req: any, res: any) => Promise<void>;\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`webpack - 开发服务端webpack配置`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`proxy - 开发服务代理配置`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`{\n  route: '/api', // 代理API的本地服务的地址\n  config: {\n    target: 'http://www.api.com/api', // 代理API的实际地址\n    changeOrigin: true // 是否改变host\n  }\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  or`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-ts\"\n          }}>{`(params: {\n  ip: string;\n  port: number;\n  host?: string;\n  logLevel: LOGLEVEL;\n  middlewareConfig?: (MiddlewareItem | MiddlewareFn)[];\n}) => {\n  route: string;\n  config: Config;\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  更多配置详见 `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/chimurai/http-proxy-middleware\"\n          }}>{`http-proxy-middleware`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`port - 开发服务启动的端口号`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`host - 开发服务启动的host`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`https - 开发服务以https协议启动，可自定义 `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`cert`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`serverType - 开发服务的类型`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`logLevel - 开发服务日志输出等级，可选 'debug'、'info'、'warn'、'error'、'silent'`}</p>\n      </li>\n    </ul>\n    <h3>{`build 构建配置`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`autoRelease - 构建完成后是否自动发布`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`srcDir - 构建资源输入路径`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`outDir - 构建结果输出路径`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`esmDir - 构建结果输出路径(符合es6 module规范)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`hash - 构建的资源是否加上hash，可选 'contenthash'、'chunkhash'、'hash'(传入true则是contenthash)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`configuration - 构建阶段的自定义配置回调，返回自定义的配置`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`reserve - 配置未经过打包，但需要保留进构建结果的资源`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`style - 构建结果是否保留样式文件`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`assets - 构建结果保留其他资源的路径`}</p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`preflight - 构建前的飞行检查`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`typescript - 是否处理ts或tsx文件`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`test - 是否进行单元测试 `}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`eslint - 是否进行eslint检测`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`prettier - 是否进行prettier检测`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`stylelint - 是否进行stylelint检测`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`release`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`git - 发布的git仓库地址`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`npm - 发布的npm仓库地址`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`preflight - 发布前的飞行检查`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`test - 发布前是否进行单元测试`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`eslint - 发布前是否进行eslint检测`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`prettier - 发布前是否进行prettier检测`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`stylelint - 发布前是否进行stylelint检测`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`commitlint - 发布前是否进行commitlint检测`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`branch - 发布前进行分支检测，设置为空字符串则不会检测`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3>{`template 新建模板配置`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`root - 生成模板的根路径`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`typescript - 是否创建ts文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`test - 是否创建单元测试文件`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`stylesheet - 样式文件类型`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`readme - `}{`[true, 'mdx']`}{` (`}{`[是否生成ReadMe文件, 创建md 或 mdx文件]`}{`)`}</p>\n      </li>\n    </ul>\n    <h3>{`plugins`}</h3>\n    <p>{`插件集合，插件需满足下面的类型：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type OmniPlugin = {\n  name: string;\n  stage: PluginStage;\n  handler: PluginHandler;\n};\n\ntype PluginStage = 'new' | 'build' | 'release';\ninterface PluginHandler {\n  (config: Omit<OmniConfig, 'plugins'>): Promise<any>;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}