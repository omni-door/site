{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Quick Start\"), mdx(\"p\", null, \"Note\\uFF1A\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"node >= 10.13.0\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"node >= 10.13.0\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"node >= 10.13.0\")), mdx(\"h2\", null, \"Initialize a project\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"By npx\\uFF1A\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npx @omni-door/cli init -s myProject\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install cli to the global\\uFF1A\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm i -g @omni-door/cli\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  Perform initialization after installation\\uFF1A\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"omni init -s myProject\\n\")), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"note: The project name is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myProject\"))))), mdx(\"h2\", null, \"Run project\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm run dev\\n\")), mdx(\"h2\", null, \"Create a Component\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm run new\\n\")), mdx(\"h2\", null, \"Build project\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm run build\\n\")));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");","map":{"version":3,"sources":["/Users/han/Desktop/GitHub/omni-site/src/components/Start/start-en.md"],"names":["React","mdx","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA;;AAIA,IAAMC,WAAW,GAAG,EAApB;AAGA,IAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEC,KACF;;AACD,SAAO,IAAC,SAAD,eAAeJ,WAAf,EAAgCI,KAAhC;AAAuC,IAAA,UAAU,EAAED,UAAnD;AAA+D,IAAA,OAAO,EAAC;AAAvE,MACL,8BADK,EAEL,4BAFK,EAGL,eAAG;AAAQ,IAAA,UAAU,EAAC;AAAnB,uBAAH,CAHK,EAIL,eAAG;AAAQ,IAAA,UAAU,EAAC;AAAnB,uBAAH,CAJK,EAKL,eAAG;AAAQ,IAAA,UAAU,EAAC;AAAnB,uBAAH,CALK,EAML,uCANK,EAOL,gBACE;AAAI,IAAA,UAAU,EAAC;AAAf,KACE;AAAG,IAAA,UAAU,EAAC;AAAd,oBADF,EAEE;AAAK,IAAA,UAAU,EAAC;AAAhB,KAAqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5C,iBAAa;AAD+B,GAA3B,4CAArB,CAFF,CADF,EAQE;AAAI,IAAA,UAAU,EAAC;AAAf,KACE;AAAG,IAAA,UAAU,EAAC;AAAd,uCADF,EAEE;AAAK,IAAA,UAAU,EAAC;AAAhB,KAAqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5C,iBAAa;AAD+B,GAA3B,+BAArB,CAFF,EAME;AAAG,IAAA,UAAU,EAAC;AAAd,yDANF,EAOE;AAAK,IAAA,UAAU,EAAC;AAAhB,KAAqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5C,iBAAa;AAD+B,GAA3B,8BAArB,CAPF,EAWE;AAAY,IAAA,UAAU,EAAC;AAAvB,KACE;AAAG,IAAA,UAAU,EAAC;AAAd,mCAAyD;AAAY,IAAA,UAAU,EAAC;AAAvB,iBAAzD,CADF,CAXF,CARF,CAPK,EA+BL,8BA/BK,EAgCL,iBAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B,mBAAL,CAhCK,EAoCL,qCApCK,EAqCL,iBAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B,mBAAL,CArCK,EAyCL,gCAzCK,EA0CL,iBAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B,qBAAL,CA1CK,CAAP;AA+CD;KAnDuBD,U;AAqDxB;AACAA,UAAU,CAACG,cAAX,GAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Quick Start`}</h1>\n    <p>{`Note：`}</p>\n    <p><strong parentName=\"p\">{`node >= 10.13.0`}</strong></p>\n    <p><strong parentName=\"p\">{`node >= 10.13.0`}</strong></p>\n    <p><strong parentName=\"p\">{`node >= 10.13.0`}</strong></p>\n    <h2>{`Initialize a project`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`By npx：`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`npx @omni-door/cli init -s myProject\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install cli to the global：`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`npm i -g @omni-door/cli\n`}</code></pre>\n        <p parentName=\"li\">{`  Perform initialization after installation：`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`omni init -s myProject\n`}</code></pre>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`note: The project name is `}<inlineCode parentName=\"p\">{`myProject`}</inlineCode></p>\n        </blockquote>\n      </li>\n    </ul>\n    <h2>{`Run project`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm run dev\n`}</code></pre>\n    <h2>{`Create a Component`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm run new\n`}</code></pre>\n    <h2>{`Build project`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm run build\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}