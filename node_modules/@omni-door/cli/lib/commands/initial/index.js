"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var path_1 = __importStar(require("path"));
var util_1 = require("util");
var child_process_1 = require("child_process");
var fs_extra_1 = __importDefault(require("fs-extra"));
var chalk_1 = __importDefault(require("chalk"));
var figlet_1 = __importDefault(require("figlet"));
var inquirer_1 = __importDefault(require("inquirer"));
var initial_preset_1 = __importDefault(require("./initial_preset"));
var utils_1 = require("@omni-door/utils");
var utils_2 = require("../../utils");
var ProjectDict = {
    'spa-react': 'spa-react (React单页应用)',
    'spa-react (React单页应用)': 'spa-react',
    'spa-vue': 'spa-vue (Vue单页应用)',
    'spa-vue (Vue单页应用)': 'spa-vue',
    'ssr-react': 'ssr-react (React服务端渲染应用)',
    'ssr-react (React服务端渲染应用)': 'ssr-react',
    'component-react': 'component-react (React组件库)',
    'component-react (React组件库)': 'component-react',
    'toolkit': 'toolkit (工具库)',
    'toolkit (工具库)': 'toolkit'
};
var LayoutDict = {
    viewport: 'viewport(vw/vh)',
    'viewport(vw/vh)': 'viewport',
    rem: 'rem',
    px: 'px'
};
var stat = util_1.promisify(fs_1.default.stat);
function isDir(dirName) {
    return __awaiter(this, void 0, void 0, function () {
        var dirPath, stats, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    dirPath = path_1.default.resolve(process.cwd(), dirName);
                    if (!fs_1.default.existsSync(dirPath)) return [3 /*break*/, 4];
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, stat(dirPath)];
                case 2:
                    stats = _a.sent();
                    if (stats.isDirectory()) {
                        return [2 /*return*/, true];
                    }
                    return [3 /*break*/, 4];
                case 3:
                    e_1 = _a.sent();
                    return [3 /*break*/, 4];
                case 4: return [2 /*return*/, false];
            }
        });
    });
}
function checkPkgTool(pkgtool) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            // install tool precheck
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    var hasTool = true;
                    try {
                        child_process_1.execSync(pkgtool + " -v", { stdio: 'ignore' });
                    }
                    catch (e) {
                        hasTool = false;
                    }
                    if (!hasTool) {
                        if (pkgtool === 'npm') {
                            utils_1.spinner.state('warn', '没有找到 npm 包管理工具，请自行安装！(Cannot found the npm package management tool!)');
                            process.exit(0);
                        }
                        else {
                            utils_1.spinner.state('info', "\u7F3A\u5C11\u5305\u7BA1\u7406\u5DE5\u5177 " + pkgtool + "\uFF01(Missing package management tool " + pkgtool + "!)");
                            inquirer_1.default.prompt([{
                                    name: 'install',
                                    type: 'confirm',
                                    message: utils_2.logo() + " \u81EA\u52A8\u5B89\u88C5 " + pkgtool + " \u5230\u5168\u5C40\u73AF\u5883? (Automatic install the " + pkgtool + " in the global environment?)",
                                    default: true
                                }]).then(function (answers) {
                                var install = answers.install;
                                if (!install) {
                                    reject(false);
                                    return process.exit(0);
                                }
                                try {
                                    child_process_1.execSync("npm i -g " + pkgtool, { stdio: 'ignore' });
                                    resolve(true);
                                }
                                catch (e) {
                                    try {
                                        child_process_1.execSync("sudo npm i -g " + pkgtool, { stdio: 'inherit' });
                                        resolve(true);
                                    }
                                    catch (err) {
                                        utils_1.logWarn(err);
                                        utils_1.logWarn(pkgtool + " \u5B89\u88C5\u5931\u8D25\uFF0C\u8BF7\u81EA\u884C\u5B89\u88C5\u540E\u518D\u8BD5\uFF01\uFF08The setup " + pkgtool + " failed, please try it by yourself!\uFF09");
                                        process.exit(0);
                                    }
                                }
                            });
                        }
                    }
                    else {
                        resolve(true);
                    }
                })];
        });
    });
}
function mkdir(dirPath) {
    dirPath && fs_extra_1.default.ensureDirSync(dirPath, { mode: 1535 });
}
function presetTpl(type) {
    var cli, pkj = '';
    switch (type) {
        case 'react_basic':
            cli = initial_preset_1.default.cli_basic_react;
            pkj = '@omni-door/tpl-spa-react';
            break;
        case 'react_standard':
            cli = initial_preset_1.default.cli_standard_react;
            pkj = '@omni-door/tpl-spa-react';
            break;
        case 'react_entire':
            cli = initial_preset_1.default.cli_entire_react;
            pkj = '@omni-door/tpl-spa-react';
            break;
        case 'vue_basic':
            cli = initial_preset_1.default.cli_basic_vue;
            pkj = '@omni-door/tpl-spa-vue';
            break;
        case 'vue_standard':
            cli = initial_preset_1.default.cli_standard_vue;
            pkj = '@omni-door/tpl-spa-vue';
            break;
        case 'vue_entire':
            cli = initial_preset_1.default.cli_entire_vue;
            pkj = '@omni-door/tpl-spa-vue';
            break;
        case 'react_ssr':
            cli = initial_preset_1.default.cli_ssr_react;
            pkj = '@omni-door/tpl-ssr-react';
            break;
        case 'react_components':
            cli = initial_preset_1.default.cli_components_react;
            pkj = '@omni-door/tpl-component-react';
            break;
        case 'toolkit':
            cli = initial_preset_1.default.cli_toolkit;
            pkj = '@omni-door/tpl-toolkit';
            break;
    }
    return { cli: cli, pkj: pkj };
}
function default_1(strategy, _a, option) {
    var react_basic = _a.react_basic, react_standard = _a.react_standard, react_entire = _a.react_entire, vue_basic = _a.vue_basic, vue_standard = _a.vue_standard, vue_entire = _a.vue_entire, react_ssr = _a.react_ssr, react_components = _a.react_components, toolkit = _a.toolkit, install = _a.install;
    return __awaiter(this, void 0, void 0, function () {
        var e_2, configFileExist, tplPackage, _b, before, after, tplPkj, tplPkjTag, _c, tplPkjParams, _d, pkjFieldName, _e, configFileName, customInitPath, tplParams, configPath, CWD, realCWD, ppkj, ppkjPath, defaultName, presetType, projectName, types, k, type, item, _f, cli, pkj, k, currStep_1, totalStep_1, isValidName_1, dupDirQuestions, retryTimes, getProjectType_1, questions_1, beforeRes, _g, _h, create_dir, dir_name, stdout, isSilent, dirName_1, initPath, _j, err_1;
        var _this = this;
        return __generator(this, function (_k) {
            switch (_k.label) {
                case 0:
                    _k.trys.push([0, 2, , 3]);
                    // node version pre-check
                    return [4 /*yield*/, utils_1.nodeVersionCheck('10.13.0')];
                case 1:
                    // node version pre-check
                    _k.sent();
                    return [3 /*break*/, 3];
                case 2:
                    e_2 = _k.sent();
                    utils_1.logWarn(e_2);
                    return [3 /*break*/, 3];
                case 3:
                    // bind exit signals
                    utils_2.signal();
                    configFileExist = false;
                    // reset illegal strategy
                    strategy = (strategy === 'stable' || strategy === 'latest') ? strategy : 'stable';
                    _b = option || {}, before = _b.before, after = _b.after, tplPkj = _b.tplPkj, tplPkjTag = _b.tplPkjTag, _c = _b.tplPkjParams, tplPkjParams = _c === void 0 ? [] : _c, _d = _b.pkjFieldName, pkjFieldName = _d === void 0 ? 'omni' : _d, _e = _b.configFileName, configFileName = _e === void 0 ? 'omni.config.js' : _e, customInitPath = _b.initPath;
                    tplParams = ["install=" + install];
                    configPath = path_1.default.resolve(configFileName);
                    CWD = process.cwd();
                    realCWD = customInitPath || CWD;
                    try {
                        ppkj = void 0;
                        ppkjPath = path_1.default.resolve(realCWD, 'package.json');
                        if (fs_1.default.existsSync(ppkjPath))
                            ppkj = require(ppkjPath);
                        configPath = path_1.default.resolve(realCWD, (ppkj && ppkj[pkjFieldName] && ppkj[pkjFieldName]['filePath']) || configFileName);
                    }
                    catch (e) {
                        utils_1.logWarn(e);
                    }
                    defaultName = path_1.parse(realCWD).name;
                    presetType = '';
                    projectName = defaultName;
                    types = {
                        react_basic: react_basic,
                        react_standard: react_standard,
                        react_entire: react_entire,
                        vue_basic: vue_basic,
                        vue_standard: vue_standard,
                        vue_entire: vue_entire,
                        react_ssr: react_ssr,
                        react_components: react_components,
                        toolkit: toolkit
                    };
                    for (k in types) {
                        type = k;
                        item = types[type];
                        if (item) {
                            presetType = type;
                            typeof item === 'string' && (projectName = item);
                            break;
                        }
                    }
                    _k.label = 4;
                case 4:
                    _k.trys.push([4, 17, , 18]);
                    utils_1.spinner.color('green');
                    utils_1.spinner.prefix('arrow3');
                    if (!presetType) return [3 /*break*/, 8];
                    utils_1.pkgNameCheck(projectName);
                    if (!fs_1.default.existsSync(configPath)) return [3 /*break*/, 6];
                    configFileExist = true;
                    // double confirmation
                    return [4 /*yield*/, new Promise(function (resolve) {
                            inquirer_1.default.prompt([{
                                    name: 'overwrite',
                                    type: 'confirm',
                                    message: utils_2.logo() + " \u786E\u5B9A\u8981\u8986\u76D6\u5DF2\u7ECF\u5B58\u5728\u7684 [" + configFileName + "] \u6587\u4EF6? (Are you sure to overwrite [" + configFileName + "]?)",
                                    default: false
                                }]).then(function (answers) {
                                var overwrite = answers.overwrite;
                                if (!overwrite)
                                    return process.exit(0);
                                resolve(void 0);
                            });
                        }).catch(function (err) {
                            utils_1.logErr(err);
                            utils_1.spinner.state('fail', '项目初始化发生错误！(The initializing occurred some accidents!)');
                            process.exit(1);
                        })];
                case 5:
                    // double confirmation
                    _k.sent();
                    _k.label = 6;
                case 6:
                    _f = presetTpl(presetType), cli = _f.cli, pkj = _f.pkj;
                    return [4 /*yield*/, checkPkgTool(cli ? cli.pkgtool : 'pnpm')];
                case 7:
                    _k.sent();
                    tplPackage = pkj;
                    tplParams.push("strategy=" + strategy);
                    for (k in cli) {
                        tplParams.push(k + "=" + cli[k]);
                    }
                    return [3 /*break*/, 10];
                case 8:
                    currStep_1 = 1;
                    totalStep_1 = '?';
                    isValidName_1 = true;
                    dupDirQuestions = [];
                    retryTimes = 10;
                    while (dupDirQuestions.length < retryTimes * 2) {
                        dupDirQuestions.push.apply(dupDirQuestions, [{
                                name: 'overwrite_dir',
                                type: 'confirm',
                                default: false,
                                message: function (answer) {
                                    return __awaiter(this, void 0, void 0, function () {
                                        var name;
                                        return __generator(this, function (_a) {
                                            name = answer.name;
                                            return [2 /*return*/, utils_2.logo() + "[" + currStep_1 + "/" + totalStep_1 + "] \u786E\u5B9A\u8981\u8986\u76D6\u5DF2\u7ECF\u5B58\u5728\u7684 [" + name + "] \u6587\u4EF6\u5939? (Are you sure to overwrite [" + name + "] directory?)"];
                                        });
                                    });
                                },
                                when: function (answer) {
                                    return __awaiter(this, void 0, void 0, function () {
                                        var name, overwrite_dir, _a;
                                        return __generator(this, function (_b) {
                                            switch (_b.label) {
                                                case 0:
                                                    isValidName_1 = utils_1.pkgNameCheck(answer.name, true);
                                                    name = answer.name, overwrite_dir = answer.overwrite_dir;
                                                    _a = isValidName_1 && !configFileExist && !overwrite_dir;
                                                    if (!_a) return [3 /*break*/, 2];
                                                    return [4 /*yield*/, isDir(name)];
                                                case 1:
                                                    _a = (_b.sent());
                                                    _b.label = 2;
                                                case 2: return [2 /*return*/, _a];
                                            }
                                        });
                                    });
                                }
                            }, {
                                name: 'name',
                                type: 'input',
                                message: function (answer) {
                                    return utils_2.logo() + "[" + currStep_1 + "/" + totalStep_1 + "] \u8BF7\u91CD\u65B0\u8F93\u5165\u9879\u76EE\u540D\u79F0 (Please reenter your project name)\uFF1A";
                                },
                                when: function (answer) {
                                    return __awaiter(this, void 0, void 0, function () {
                                        var name, _a, _b;
                                        return __generator(this, function (_c) {
                                            switch (_c.label) {
                                                case 0:
                                                    name = answer.name;
                                                    _a = !isValidName_1;
                                                    if (_a) return [3 /*break*/, 3];
                                                    _b = !configFileExist && answer.overwrite_dir === false;
                                                    if (!_b) return [3 /*break*/, 2];
                                                    return [4 /*yield*/, isDir(name)];
                                                case 1:
                                                    _b = (_c.sent());
                                                    _c.label = 2;
                                                case 2:
                                                    _a = (_b);
                                                    _c.label = 3;
                                                case 3: return [2 /*return*/, _a];
                                            }
                                        });
                                    });
                                },
                                default: defaultName
                            }]);
                    }
                    getProjectType_1 = function (answer) {
                        return ProjectDict[answer.project_type];
                    };
                    questions_1 = __spreadArrays([
                        {
                            name: 'overwrite',
                            type: 'confirm',
                            message: utils_2.logo() + " \u786E\u5B9A\u8981\u8986\u76D6\u5DF2\u7ECF\u5B58\u5728\u7684 [" + configFileName + "] \u6587\u4EF6? (Are you sure to overwrite [" + configFileName + "]?)",
                            default: false
                        }, {
                            name: 'project_type',
                            type: 'list',
                            choices: [
                                ProjectDict['spa-react'],
                                ProjectDict['spa-vue'],
                                ProjectDict['ssr-react'],
                                ProjectDict['component-react'],
                                ProjectDict['toolkit']
                            ],
                            message: utils_2.logo() + "[" + currStep_1 + "/" + totalStep_1 + "] \u8BF7\u9009\u62E9\u9879\u76EE\u7C7B\u578B (Please choose the type of project)\uFF1A",
                            when: function (answer) {
                                if (answer.overwrite === false) {
                                    return process.exit(0);
                                }
                                return true;
                            }
                        }, {
                            name: 'name',
                            type: 'input',
                            message: function (answer) {
                                var projectType = getProjectType_1(answer);
                                switch (projectType) {
                                    case 'spa-react':
                                    case 'spa-vue':
                                        totalStep_1 = install ? 8 : 7;
                                        break;
                                    case 'ssr-react':
                                        totalStep_1 = install ? 8 : 7;
                                        break;
                                    case 'component-react':
                                        totalStep_1 = install ? 6 : 5;
                                        break;
                                    default:
                                        totalStep_1 = install ? 4 : 3;
                                }
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u8BF7\u8F93\u5165\u9879\u76EE\u540D\u79F0 (Please enter your project name)\uFF1A";
                            },
                            default: defaultName
                        }
                    ], dupDirQuestions, [
                        {
                            name: 'server',
                            type: 'list',
                            choices: function (answer) {
                                var projectType = getProjectType_1(answer);
                                if (projectType === 'ssr-react') {
                                    return ['next', 'koa-next'];
                                }
                                return ['docz', 'storybook', 'styleguidist', 'bisheng'];
                            },
                            default: function (answer) {
                                var projectType = getProjectType_1(answer);
                                if (projectType === 'ssr-react') {
                                    return 'next';
                                }
                                return 'docz';
                            },
                            message: function (answer) {
                                var projectType = getProjectType_1(answer);
                                var msg = projectType === 'ssr-react' ? '请选择SSR服务类型 (Please chioce the SSR server type)' : '请选择组件库Demo框架 (Please chioce the component-library demonstration frame)';
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] " + msg + "\uFF1A";
                            },
                            when: function (answer) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var overwrite_dir, name, _a, projectType;
                                    return __generator(this, function (_b) {
                                        switch (_b.label) {
                                            case 0:
                                                overwrite_dir = answer.overwrite_dir, name = answer.name;
                                                _a = !configFileExist && !overwrite_dir;
                                                if (!_a) return [3 /*break*/, 2];
                                                return [4 /*yield*/, isDir(name)];
                                            case 1:
                                                _a = (_b.sent());
                                                _b.label = 2;
                                            case 2:
                                                if (_a) {
                                                    utils_1.logWarn('失败次数太多，请想清楚后再试！(Please turn over to think then try again!)');
                                                    return [2 /*return*/, process.exit(0)];
                                                }
                                                projectType = getProjectType_1(answer);
                                                if (projectType === 'component-react' || projectType === 'ssr-react') {
                                                    return [2 /*return*/, true];
                                                }
                                                return [2 /*return*/, false];
                                        }
                                    });
                                });
                            }
                        }, {
                            name: 'ts',
                            type: 'confirm',
                            message: function (answer) {
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u662F\u5426\u4F7F\u7528typescript? (Whether or not apply typescript?)";
                            },
                            default: true,
                            when: function (answer) {
                                var projectType = getProjectType_1(answer);
                                if (projectType === 'spa-react' || projectType === 'spa-vue' || projectType === 'ssr-react') {
                                    return true;
                                }
                                return false;
                            }
                        }, {
                            name: 'test',
                            type: 'confirm',
                            message: function (answer) {
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u662F\u5426\u5F00\u542F\u5355\u5143\u6D4B\u8BD5? (Whether or not apply unit-test?)";
                            },
                            default: function (answer) { return getProjectType_1(answer) !== 'spa-react' && getProjectType_1(answer) !== 'ssr-react'; },
                            when: function (answer) {
                                var projectType = getProjectType_1(answer);
                                if (projectType === 'spa-react' || projectType === 'spa-vue' || projectType === 'ssr-react') {
                                    return true;
                                }
                                return false;
                            }
                        }, {
                            name: 'style',
                            type: 'checkbox',
                            choices: ['css', 'less', 'scss'],
                            message: function (answer) {
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u9009\u62E9\u6837\u5F0F\u6587\u4EF6 (Please select the stylesheets)";
                            },
                            default: ['css'],
                            when: function (answer) {
                                if (getProjectType_1(answer) === 'toolkit') {
                                    return false;
                                }
                                return true;
                            }
                        }, {
                            name: 'layout',
                            type: 'list',
                            when: function (answer) {
                                var _a;
                                var projectType = getProjectType_1(answer);
                                if (projectType === 'spa-react' || projectType === 'spa-vue')
                                    return true;
                                if (((_a = answer === null || answer === void 0 ? void 0 : answer.style) === null || _a === void 0 ? void 0 : _a.length) === 0) {
                                    ++currStep_1;
                                    return false;
                                }
                                return false;
                            },
                            choices: [LayoutDict.viewport, LayoutDict.rem, LayoutDict.px],
                            message: function (answer) {
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u9009\u62E9\u5E03\u5C40\u9002\u914D\u65B9\u6848 (Please select layout plan)";
                            }
                        }, {
                            name: 'lint',
                            type: 'checkbox',
                            choices: function (answer) {
                                var _a;
                                var lintArr = ['eslint', 'prettier', 'commitlint', 'stylelint'];
                                (((_a = answer === null || answer === void 0 ? void 0 : answer.style) === null || _a === void 0 ? void 0 : _a.length) === 0 || getProjectType_1(answer) === 'toolkit') && lintArr.pop();
                                return lintArr;
                            },
                            message: function (answer) {
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u9009\u62E9lint\u5DE5\u5177 (Please select the lint tools)\uFF1A";
                            },
                            default: ['eslint']
                        }, {
                            name: 'pkgtool',
                            type: 'list',
                            choices: ['pnpm', 'yarn', 'npm'],
                            when: function () {
                                if (!install)
                                    return false;
                                return true;
                            },
                            message: function (answer) {
                                return utils_2.logo() + "[" + ++currStep_1 + "/" + totalStep_1 + "] \u8BF7\u9009\u62E9\u5305\u5B89\u88C5\u5DE5\u5177\uFF0C\u63A8\u8350\u4F7F\u7528pnpm (Please choice the package install tool, recommended use pnpm)\uFF1A";
                            },
                            default: 'pnpm'
                        }
                    ]);
                    // if the config file non-existence，cancel double confirmation
                    if (!fs_1.default.existsSync(configPath)) {
                        questions_1.shift();
                    }
                    else {
                        configFileExist = true;
                    }
                    return [4 /*yield*/, new Promise(function (resolve) {
                            inquirer_1.default.prompt(questions_1)
                                .then(function (answers) { return __awaiter(_this, void 0, void 0, function () {
                                var project_type, name, _a, server, _b, ts, _c, test, _d, style, _e, layout, _f, lint, _g, pkgtool, eslint, prettier, commitlint, stylelint, stylesheet, projectType;
                                return __generator(this, function (_h) {
                                    switch (_h.label) {
                                        case 0:
                                            project_type = answers.project_type, name = answers.name, _a = answers.server, server = _a === void 0 ? '' : _a, _b = answers.ts, ts = _b === void 0 ? true : _b, _c = answers.test, test = _c === void 0 ? true : _c, _d = answers.style, style = _d === void 0 ? [] : _d, _e = answers.layout, layout = _e === void 0 ? 'px' : _e, _f = answers.lint, lint = _f === void 0 ? [] : _f, _g = answers.pkgtool, pkgtool = _g === void 0 ? 'pnpm' : _g;
                                            return [4 /*yield*/, checkPkgTool(pkgtool)];
                                        case 1:
                                            _h.sent();
                                            eslint = !!~lint.indexOf('eslint');
                                            prettier = !!~lint.indexOf('prettier');
                                            commitlint = !!~lint.indexOf('commitlint');
                                            stylelint = !!~lint.indexOf('stylelint');
                                            stylesheet = style.length === 0
                                                ? ''
                                                : style.includes('less') && style.includes('scss')
                                                    ? 'all'
                                                    : style.includes('less')
                                                        ? 'less'
                                                        : style.includes('scss')
                                                            ? 'scss'
                                                            : 'css';
                                            projectType = ProjectDict[project_type];
                                            projectName = name;
                                            tplParams.push("strategy=" + strategy, "project_type=" + projectType, "pkgtool=" + pkgtool, "ts=" + ts, "test=" + test, "eslint=" + eslint, "prettier=" + prettier, "commitlint=" + commitlint, "style=" + stylesheet, "layout=" + LayoutDict[layout], "stylelint=" + stylelint, "devServer=" + server, "spaServer=" + server, "ssrServer=" + server, "componentServer=" + server);
                                            switch (projectType) {
                                                case 'spa-react':
                                                    tplPackage = '@omni-door/tpl-spa-react';
                                                    break;
                                                case 'spa-vue':
                                                    tplPackage = '@omni-door/tpl-spa-vue';
                                                    break;
                                                case 'ssr-react':
                                                    tplPackage = '@omni-door/tpl-ssr-react';
                                                    break;
                                                case 'component-react':
                                                    tplPackage = '@omni-door/tpl-component-react';
                                                    break;
                                                case 'toolkit':
                                                    tplPackage = '@omni-door/tpl-toolkit';
                                                    break;
                                            }
                                            resolve(void 0);
                                            return [2 /*return*/];
                                    }
                                });
                            }); });
                        }).catch(function (err) {
                            utils_1.logErr(err);
                            utils_1.spinner.state('fail', '项目初始化发生错误！(The initializing occurred some accidents!)');
                            process.exit(1);
                        })];
                case 9:
                    _k.sent();
                    _k.label = 10;
                case 10:
                    _g = typeof before === 'function';
                    if (!_g) return [3 /*break*/, 12];
                    return [4 /*yield*/, before(projectName)];
                case 11:
                    _g = (_k.sent());
                    _k.label = 12;
                case 12:
                    beforeRes = _g;
                    _h = beforeRes || {}, create_dir = _h.create_dir, dir_name = _h.dir_name, stdout = _h.stdout;
                    isSilent = typeof stdout === 'boolean' ? !stdout : false;
                    dirName_1 = dir_name || projectName;
                    initPath = customInitPath || path_1.default.resolve(CWD, dirName_1);
                    _j = !configFileExist;
                    if (!_j) return [3 /*break*/, 14];
                    return [4 /*yield*/, isDir(dirName_1)];
                case 13:
                    _j = (_k.sent());
                    _k.label = 14;
                case 14:
                    if (!_j) return [3 /*break*/, 16];
                    return [4 /*yield*/, new Promise(function (resolve) {
                            inquirer_1.default.prompt([{
                                    name: 'overwrite_dir',
                                    type: 'confirm',
                                    message: utils_2.logo() + " \u8BF7\u518D\u6B21\u786E\u8BA4\u8986\u76D6 [" + dirName_1 + "] \u6587\u4EF6\u5939! (Please confirm overwrite the [" + dirName_1 + "] directory again!)",
                                    default: true
                                }]).then(function (answers) {
                                var overwrite_dir = answers.overwrite_dir;
                                if (!overwrite_dir)
                                    return process.exit(0);
                                resolve(void 0);
                            });
                        }).catch(function (err) {
                            utils_1.logErr(err);
                            utils_1.spinner.state('fail', '项目初始化发生错误！(The initializing occurred some accidents!)');
                            process.exit(1);
                        })];
                case 15:
                    _k.sent();
                    _k.label = 16;
                case 16:
                    tplParams.push("projectName=" + (dir_name || projectName), "initPath=" + initPath, "isSilent=" + isSilent);
                    // loading start display
                    utils_1.spinner.state('start', '项目初始化中 (Initializing, please wait patiently)');
                    // create the folder
                    !configFileExist && create_dir !== false && mkdir(initPath);
                    return [2 /*return*/, figlet_1.default(utils_1.getBrand(), function (err, data) {
                            if (err) {
                                utils_1.logErr(err.message);
                                utils_1.spinner.state('fail', 'figlet 出现了问题！(Some thing about figlet is wrong!)');
                            }
                            return utils_1.exec([
                                "npx " + (tplPkj || tplPackage) + "@" + (tplPkjTag || 'latest') + " init " + utils_1.arr2str(__spreadArrays(tplParams, tplPkjParams))
                            ], function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    var afterRes, _a, _b, success, msg;
                                    return __generator(this, function (_c) {
                                        switch (_c.label) {
                                            case 0:
                                                _a = typeof after === 'function';
                                                if (!_a) return [3 /*break*/, 2];
                                                return [4 /*yield*/, after()];
                                            case 1:
                                                _a = (_c.sent());
                                                _c.label = 2;
                                            case 2:
                                                afterRes = _a;
                                                _b = afterRes || {}, success = _b.success, msg = _b.msg;
                                                if (success === false) {
                                                    utils_1.spinner.state('fail', msg || '初始化项目失败！(Initialize project failed!)');
                                                }
                                                else {
                                                    utils_1.spinner.state('succeed', msg || '初始化项目完成！(Initialize project success!)');
                                                }
                                                data && console.info(chalk_1.default.yellow(data));
                                                process.exit(0);
                                                return [2 /*return*/];
                                        }
                                    });
                                });
                            }, function (err) {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (_a) {
                                        utils_1.logErr(err);
                                        utils_1.spinner.state('fail', '初始化项目失败！(Initialize project failed!)');
                                        process.exit(1);
                                        return [2 /*return*/];
                                    });
                                });
                            });
                        })];
                case 17:
                    err_1 = _k.sent();
                    utils_1.logErr(err_1);
                    utils_1.spinner.state('fail', '项目初始化发生错误！(The initializing occurred some accidents!)');
                    process.exit(1);
                    return [3 /*break*/, 18];
                case 18: return [2 /*return*/];
            }
        });
    });
}
exports.default = default_1;
